<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Debug&amp;基础练习</title>
      <link href="/posts/4defe07c.html"/>
      <url>/posts/4defe07c.html</url>
      
        <content type="html"><![CDATA[<h2 id="Debug模式"><a href="#Debug模式" class="headerlink" title="Debug模式"></a>Debug模式</h2><h3 id="什么是Debug模式【理解】"><a href="#什么是Debug模式【理解】" class="headerlink" title="什么是Debug模式【理解】"></a>什么是Debug模式【理解】</h3><p>是供程序员使用的程序调试工具，它可以用于查看程序的执行流程，也可以用于追踪程序执行过程来调试程序。</p><h3 id="Debug模式操作流程【应用】"><a href="#Debug模式操作流程【应用】" class="headerlink" title="Debug模式操作流程【应用】"></a>Debug模式操作流程【应用】</h3><ul><li><p>如何加断点</p><ul><li>选择要设置断点的代码行，在行号的区域后面单击鼠标左键即可</li></ul><p><img src="https://cdn.jsdelivr.net/gh/heixiongwl/heixiong/2020/09/090301.png" alt="01"></p></li><li><p>如何运行加了断点的程序</p><ul><li>在代码区域右键Debug执行</li></ul><p><img src="https://cdn.jsdelivr.net/gh/heixiongwl/heixiong/2020/09/090302.png" alt="02"></p></li><li><p>看哪里</p><ul><li>看Debugger窗口</li></ul><p><img src="https://cdn.jsdelivr.net/gh/heixiongwl/heixiong/2020/09/090303.png" alt="03"></p><ul><li>看Console窗口</li></ul><p><img src="https://cdn.jsdelivr.net/gh/heixiongwl/heixiong/2020/09/090304.png" alt="04"></p></li><li><p>点哪里</p><ul><li>点Step Into (F7)这个箭头，也可以直接按F7</li></ul><p><img src="https://cdn.jsdelivr.net/gh/heixiongwl/heixiong/2020/09/090305.png" alt="05"></p></li><li><p>如何删除断点</p><ul><li>选择要删除的断点，单击鼠标左键即可</li></ul><p><img src="https://cdn.jsdelivr.net/gh/heixiongwl/heixiong/2020/09/090306.png" alt="06"></p><ul><li>如果是多个断点，可以每一个再点击一次。也可以一次性全部删除</li></ul><p><img src="https://cdn.jsdelivr.net/gh/heixiongwl/heixiong/2020/09/090307.png" alt="07"></p></li></ul><h2 id="基础练习"><a href="#基础练习" class="headerlink" title="基础练习"></a>基础练习</h2><h3 id="减肥计划if版本【应用】"><a href="#减肥计划if版本【应用】" class="headerlink" title="减肥计划if版本【应用】"></a>减肥计划if版本【应用】</h3><h4 id="案例需求"><a href="#案例需求" class="headerlink" title="案例需求"></a>案例需求</h4><p>​    输入星期数，显示今天的减肥活动<br>​          周一：跑步<br>​          周二：游泳<br>​          周三：慢走<br>​          周四：动感单车<br>​          周五：拳击<br>​          周六：爬山<br>​          周日：好好吃一顿</p><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    思路：</span></span><br><span class="line"><span class="comment">        1:键盘录入一个星期数，用一个变量接收</span></span><br><span class="line"><span class="comment">        2:对星期数进行判断，这里用 if 语句实现</span></span><br><span class="line"><span class="comment">        3:在对应的语句控制中输出对应的减肥活动</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//键盘录入一个星期数，用一个变量接收</span></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个星期数：&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> week = sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//对星期数进行判断，这里用 if 语句实现</span></span><br><span class="line">        <span class="keyword">if</span> (week &lt; <span class="number">1</span> || week &gt; <span class="number">7</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;你输入的星期数有误&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;跑步&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">2</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;游泳&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">3</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;慢走&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">4</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;动感单车&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">5</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;拳击&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (week == <span class="number">6</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;爬山&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;好好吃一顿&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="减肥计划switch版本【应用】"><a href="#减肥计划switch版本【应用】" class="headerlink" title="减肥计划switch版本【应用】"></a>减肥计划switch版本【应用】</h3><h4 id="案例需求-1"><a href="#案例需求-1" class="headerlink" title="案例需求"></a>案例需求</h4><p>​    输入星期数，显示今天的减肥活动<br>​          周一：跑步<br>​          周二：游泳<br>​          周三：慢走<br>​          周四：动感单车<br>​          周五：拳击<br>​          周六：爬山<br>​          周日：好好吃一顿</p><h4 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    思路：</span></span><br><span class="line"><span class="comment">        1:键盘录入一个星期数，用一个变量接收</span></span><br><span class="line"><span class="comment">        2:对星期数进行判断，这里用 switch 语句实现</span></span><br><span class="line"><span class="comment">        3:在对应的语句控制中输出对应的减肥活动</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    导包：</span></span><br><span class="line"><span class="comment">        1:手动导包  import java.util.Scanner;</span></span><br><span class="line"><span class="comment">        2:快捷键导包 Alt+Enter</span></span><br><span class="line"><span class="comment">        3:自动导包</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//键盘录入一个星期数，用一个变量接收</span></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个星期数：&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> week = sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//对星期数进行判断，这里用 switch 语句实现</span></span><br><span class="line">        <span class="keyword">switch</span> (week) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;跑步&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;游泳&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;慢走&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;动感单车&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;拳击&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;爬山&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;好好吃一顿&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;你输入的星期数有误&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="逢七跳过【应用】"><a href="#逢七跳过【应用】" class="headerlink" title="逢七跳过【应用】"></a>逢七跳过【应用】</h3><h4 id="案例需求-2"><a href="#案例需求-2" class="headerlink" title="案例需求"></a>案例需求</h4><p>​    朋友聚会的时候可能会玩一个游戏：逢七过。<br>​        规则是：从任意一个数字开始报数，当你要报的数字包含7或者是7的倍数时都要说：过。<br>​        为了帮助大家更好的玩这个游戏，这里我们直接在控制台打印出1-100之间的满足逢七必过规则的数据。<br>​        这样，大家将来在玩游戏的时候，就知道哪些数据要说：过。    </p><h4 id="代码实现-2"><a href="#代码实现-2" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    思路：</span></span><br><span class="line"><span class="comment">        1:数据在1-100之间，用for循环实现数据的获取</span></span><br><span class="line"><span class="comment">        2:根据规则，用if语句实现数据的判断：要么个位是7，要么十位是7，要么能够被7整除</span></span><br><span class="line"><span class="comment">        3:在控制台输出满足规则的数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//数据在1-100之间，用for循环实现数据的获取</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">1</span>; x&lt;=<span class="number">100</span>; x++) &#123;</span><br><span class="line">            <span class="comment">//根据规则，用if语句实现数据的判断：要么个位是7，要么十位是7，要么能够被7整除</span></span><br><span class="line">            <span class="keyword">if</span>(x%<span class="number">10</span>==<span class="number">7</span> || x/<span class="number">10</span>%<span class="number">10</span>==<span class="number">7</span> || x%<span class="number">7</span>==<span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">//在控制台输出满足规则的数据</span></span><br><span class="line">                System.out.println(x);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="不死神兔【应用】"><a href="#不死神兔【应用】" class="headerlink" title="不死神兔【应用】"></a>不死神兔【应用】</h3><h4 id="案例需求-3"><a href="#案例需求-3" class="headerlink" title="案例需求"></a>案例需求</h4><p>​    有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，<br>​        假如兔子都不死，问第二十个月的兔子对数为多少？    </p><h4 id="代码实现-3"><a href="#代码实现-3" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   思路：</span></span><br><span class="line"><span class="comment">        1:为了存储多个月的兔子对数，定义一个数组，用动态初始化完成数组元素的初始化，长度为20</span></span><br><span class="line"><span class="comment">        2:因为第1个月，第2个月兔子的对数是已知的，都是1，所以数组的第1个元素，第2个元素值也都是1</span></span><br><span class="line"><span class="comment">        3:用循环实现计算每个月的兔子对数</span></span><br><span class="line"><span class="comment">        4:输出数组中最后一个元素的值，就是第20个月的兔子对数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test04</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//为了存储多个月的兔子对数，定义一个数组，用动态初始化完成数组元素的初始化，长度为20</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//因为第1个月，第2个月兔子的对数是已知的，都是1，所以数组的第1个元素，第2个元素值也都是1</span></span><br><span class="line">        arr[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        arr[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//用循环实现计算每个月的兔子对数</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">2</span>; x&lt;arr.length; x++) &#123;</span><br><span class="line">            arr[x] = arr[x-<span class="number">2</span>] + arr[x-<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出数组中最后一个元素的值，就是第20个月的兔子对数</span></span><br><span class="line">        System.out.println(<span class="string">&quot;第二十个月兔子的对数是：&quot;</span> + arr[<span class="number">19</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="百钱白鸡【应用】"><a href="#百钱白鸡【应用】" class="headerlink" title="百钱白鸡【应用】"></a>百钱白鸡【应用】</h3><h4 id="案例需求-4"><a href="#案例需求-4" class="headerlink" title="案例需求"></a>案例需求</h4><p>​    我国古代数学家张丘建在《算经》一书中提出的数学问题：鸡翁一值钱五，鸡母一值钱三，鸡雏三值钱一。<br>​        百钱买百鸡，问鸡翁、鸡母、鸡雏各几何？</p><h4 id="代码实现-4"><a href="#代码实现-4" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    思路：</span></span><br><span class="line"><span class="comment">        1:第1层循环，用于表示鸡翁的范围，初始化表达式的变量定义为 x=0，判断条件是x&lt;=20</span></span><br><span class="line"><span class="comment">        2:第2层循环，用于表示鸡母的范围，初始化表达式的变量定义为 y=0，判断条件是y&lt;=33</span></span><br><span class="line"><span class="comment">        3:这个时候，用于表示鸡雏的变量 z = 100 – x – y</span></span><br><span class="line"><span class="comment">        4:判断表达式 z%3==0 和表达式 5*x + 3*y + z/3 = 100 是否同时成立，如果成立，输出对应的 x，y，z 的值，就是对应的鸡翁，鸡母，鸡雏的值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test05</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//第1层循环，用于表示鸡翁的范围，初始化表达式的变量定义为 x=0，判断条件是x&lt;=20</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>; x&lt;=<span class="number">20</span>; x++) &#123;</span><br><span class="line">            <span class="comment">//第2层循环，用于表示鸡母的范围，初始化表达式的变量定义为 y=0，判断条件是y&lt;=33</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">0</span>; y&lt;=<span class="number">33</span>; y++) &#123;</span><br><span class="line">                <span class="comment">//这个时候，用于表示鸡雏的变量 z = 100 – x – y</span></span><br><span class="line">                <span class="keyword">int</span> z = <span class="number">100</span> - x - y;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//判断表达式 z%3==0 和表达式 5*x + 3*y + z/3 = 100 是否同时成立</span></span><br><span class="line">                <span class="keyword">if</span>(z%<span class="number">3</span>==<span class="number">0</span> &amp;&amp; <span class="number">5</span>*x+<span class="number">3</span>*y+z/<span class="number">3</span>==<span class="number">100</span>) &#123;</span><br><span class="line">                    System.out.println(x+<span class="string">&quot;,&quot;</span>+y+<span class="string">&quot;,&quot;</span>+z);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数组元素求和【应用】"><a href="#数组元素求和【应用】" class="headerlink" title="数组元素求和【应用】"></a>数组元素求和【应用】</h3><h4 id="案例需求-5"><a href="#案例需求-5" class="headerlink" title="案例需求"></a>案例需求</h4><p>​    有这样的一个数组，元素是{68,27,95,88,171,996,51,210}。求出该数组中满足要求的元素和，<br>​        要求是：求和的元素个位和十位都不能是7，并且只能是偶数</p><h4 id="代码实现-5"><a href="#代码实现-5" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   思路：</span></span><br><span class="line"><span class="comment">        1:定义一个数组，用静态初始化完成数组元素的初始化</span></span><br><span class="line"><span class="comment">        2:定义一个求和变量，初始值是0</span></span><br><span class="line"><span class="comment">        3:遍历数组，获取到数组中的每一个元素</span></span><br><span class="line"><span class="comment">        4:判断该元素是否满足条件，如果满足条件就累加</span></span><br><span class="line"><span class="comment">        5:输出求和变量的值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test06</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个数组，用静态初始化完成数组元素的初始化</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">68</span>, <span class="number">27</span>, <span class="number">95</span>, <span class="number">88</span>, <span class="number">171</span>, <span class="number">996</span>, <span class="number">51</span>, <span class="number">210</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义一个求和变量，初始值是0</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历数组，获取到数组中的每一个元素</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>; x&lt;arr.length; x++) &#123;</span><br><span class="line">            <span class="comment">//判断该元素是否满足条件，如果满足条件就累加</span></span><br><span class="line">            <span class="keyword">if</span>(arr[x]%<span class="number">10</span>!=<span class="number">7</span> &amp;&amp; arr[x]/<span class="number">10</span>%<span class="number">10</span>!=<span class="number">7</span> &amp;&amp; arr[x]%<span class="number">2</span>==<span class="number">0</span>) &#123;</span><br><span class="line">                sum += arr[x];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出求和变量的值</span></span><br><span class="line">        System.out.println(<span class="string">&quot;sum:&quot;</span> + sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="判断两个数组是否相同【应用】"><a href="#判断两个数组是否相同【应用】" class="headerlink" title="判断两个数组是否相同【应用】"></a>判断两个数组是否相同【应用】</h3><h4 id="案例需求-6"><a href="#案例需求-6" class="headerlink" title="案例需求"></a>案例需求</h4><p>​    定义一个方法，用于比较两个数组的内容是否相同</p><h4 id="代码实现-6"><a href="#代码实现-6" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    思路：</span></span><br><span class="line"><span class="comment">        1:定义两个数组，分别使用静态初始化完成数组元素的初始化</span></span><br><span class="line"><span class="comment">        2:定义一个方法，用于比较两个数组的内容是否相同</span></span><br><span class="line"><span class="comment">        3:比较两个数组的内容是否相同，按照下面的步骤实现就可以了</span></span><br><span class="line"><span class="comment">            首先比较数组长度，如果长度不相同，数组内容肯定不相同，返回false</span></span><br><span class="line"><span class="comment">            其次遍历，比较两个数组中的每一个元素，只要有元素不相同，返回false</span></span><br><span class="line"><span class="comment">            最后循环遍历结束后，返回true</span></span><br><span class="line"><span class="comment">        4:调用方法，用变量接收</span></span><br><span class="line"><span class="comment">        5:输出结果</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test07</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义两个数组，分别使用静态初始化完成数组元素的初始化</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>&#125;;</span><br><span class="line">        <span class="comment">//int[] arr2 = &#123;11, 22, 33, 44, 55&#125;;</span></span><br><span class="line">        <span class="keyword">int</span>[] arr2 = &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用方法，用变量接收</span></span><br><span class="line">        <span class="keyword">boolean</span> flag = compare(arr,arr2);</span><br><span class="line">        <span class="comment">//输出结果</span></span><br><span class="line">        System.out.println(flag);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法，用于比较两个数组的内容是否相同</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        两个明确：</span></span><br><span class="line"><span class="comment">            返回值类型：boolean</span></span><br><span class="line"><span class="comment">            参数：int[] arr, int[] arr2</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span>[] arr2)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//首先比较数组长度，如果长度不相同，数组内容肯定不相同，返回false</span></span><br><span class="line">        <span class="keyword">if</span>(arr.length != arr2.length) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//其次遍历，比较两个数组中的每一个元素，只要有元素不相同，返回false</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>; x&lt;arr.length; x++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[x] != arr2[x]) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//最后循环遍历结束后，返回true</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="查找元素在数组中出现的索引位置【应用】"><a href="#查找元素在数组中出现的索引位置【应用】" class="headerlink" title="查找元素在数组中出现的索引位置【应用】"></a>查找元素在数组中出现的索引位置【应用】</h3><h4 id="案例需求-7"><a href="#案例需求-7" class="headerlink" title="案例需求"></a>案例需求</h4><p>​    已知一个数组 arr = {19, 28, 37, 46, 50}; 键盘录入一个数据，查找该数据在数组中的索引。</p><p>​    并在控制台输出找到的索引值。如果没有查找到，则输出-1</p><h4 id="代码实现-7"><a href="#代码实现-7" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    思路：</span></span><br><span class="line"><span class="comment">        1:定义一个数组，用静态初始化完成数组元素的初始化</span></span><br><span class="line"><span class="comment">        2:键盘录入要查找的数据，用一个变量接收</span></span><br><span class="line"><span class="comment">        3:定义一个索引变量，初始值为-1</span></span><br><span class="line"><span class="comment">        4:遍历数组，获取到数组中的每一个元素</span></span><br><span class="line"><span class="comment">        5:拿键盘录入的数据和数组中的每一个元素进行比较，如果值相同，就把该值对应的索引赋值给索引变量,并结束循环</span></span><br><span class="line"><span class="comment">        6:输出索引变量</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test08</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个数组，用静态初始化完成数组元素的初始化</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">19</span>, <span class="number">28</span>, <span class="number">37</span>, <span class="number">46</span>, <span class="number">50</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//键盘录入要查找的数据，用一个变量接收</span></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入要查找的数据：&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> number = sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用方法</span></span><br><span class="line">        <span class="keyword">int</span> index = getIndex(arr, number);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出索引变量</span></span><br><span class="line">        System.out.println(<span class="string">&quot;index: &quot;</span> + index);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查找指定的数据在数组中的索引</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        两个明确：</span></span><br><span class="line"><span class="comment">            返回值类型：int</span></span><br><span class="line"><span class="comment">            参数：int[] arr, int number</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getIndex</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> number)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个索引变量，初始值为-1</span></span><br><span class="line">        <span class="keyword">int</span> index = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历数组，获取到数组中的每一个元素</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>; x&lt;arr.length; x++) &#123;</span><br><span class="line">            <span class="comment">//拿键盘录入的数据和数组中的每一个元素进行比较，如果值相同，就把该值对应的索引赋值给索引变量,并结束循环</span></span><br><span class="line">            <span class="keyword">if</span>(arr[x] == number) &#123;</span><br><span class="line">                index = x;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//返回索引</span></span><br><span class="line">        <span class="keyword">return</span> index;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数组元素反转【应用】"><a href="#数组元素反转【应用】" class="headerlink" title="数组元素反转【应用】"></a>数组元素反转【应用】</h3><h4 id="案例需求-8"><a href="#案例需求-8" class="headerlink" title="案例需求"></a>案例需求</h4><p>​    已知一个数组 arr = {19, 28, 37, 46, 50}; 用程序实现把数组中的元素值交换，<br>​        交换后的数组 arr = {50, 46, 37, 28, 19}; 并在控制台输出交换后的数组元素。</p><h4 id="代码实现-8"><a href="#代码实现-8" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    思路：</span></span><br><span class="line"><span class="comment">        1:定义一个数组，用静态初始化完成数组元素的初始化</span></span><br><span class="line"><span class="comment">        2:循环遍历数组，这一次初始化语句定义两个索引变量，判断条件是开始索引小于等于结束索引</span></span><br><span class="line"><span class="comment">        3:变量交换</span></span><br><span class="line"><span class="comment">        4:遍历数组</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test09</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个数组，用静态初始化完成数组元素的初始化</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">19</span>, <span class="number">28</span>, <span class="number">37</span>, <span class="number">46</span>, <span class="number">50</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用反转的方法</span></span><br><span class="line">        reverse(arr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历数组</span></span><br><span class="line">        printArray(arr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        两个明确：</span></span><br><span class="line"><span class="comment">            返回值类型：void</span></span><br><span class="line"><span class="comment">            参数：int[] arr</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">reverse</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//循环遍历数组，这一次初始化语句定义两个索引变量，判断条件是开始索引小于等于结束索引</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> start = <span class="number">0</span>, end = arr.length - <span class="number">1</span>; start &lt;= end; start++, end--) &#123;</span><br><span class="line">            <span class="comment">//变量交换</span></span><br><span class="line">            <span class="keyword">int</span> temp = arr[start];</span><br><span class="line">            arr[start] = arr[end];</span><br><span class="line">            arr[end] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        两个明确：</span></span><br><span class="line"><span class="comment">            返回值类型：void</span></span><br><span class="line"><span class="comment">            参数：int[] arr</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printArray</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;[&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; arr.length; x++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (x == arr.length - <span class="number">1</span>) &#123;</span><br><span class="line">                System.out.print(arr[x]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.print(arr[x] + <span class="string">&quot;, &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;]&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="评委打分【应用】"><a href="#评委打分【应用】" class="headerlink" title="评委打分【应用】"></a>评委打分【应用】</h3><h4 id="案例需求-9"><a href="#案例需求-9" class="headerlink" title="案例需求"></a>案例需求</h4><p>​    在编程竞赛中，有6个评委为参赛的选手打分，分数为0-100的整数分。<br>​        选手的最后得分为：去掉一个最高分和一个最低分后 的4个评委平均值 (不考虑小数部分)。</p><h4 id="代码实现-9"><a href="#代码实现-9" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    思路：</span></span><br><span class="line"><span class="comment">        1:定义一个数组，用动态初始化完成数组元素的初始化，长度为6</span></span><br><span class="line"><span class="comment">        2:键盘录入评委分数</span></span><br><span class="line"><span class="comment">        3:由于是6个评委打分，所以，接收评委分数的操作，用循环改进</span></span><br><span class="line"><span class="comment">        4:定义方法实现获取数组中的最高分(数组最大值)，调用方法</span></span><br><span class="line"><span class="comment">        5:定义方法实现获取数组中的最低分(数组最小值) ，调用方法</span></span><br><span class="line"><span class="comment">        6:定义方法实现获取数组中的所有元素的和(数组元素求和) ，调用方法</span></span><br><span class="line"><span class="comment">        7:按照计算规则进行计算得到平均分</span></span><br><span class="line"><span class="comment">        8:输出平均分</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test10</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个数组，用动态初始化完成数组元素的初始化，长度为6</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">6</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//键盘录入评委分数</span></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//由于是6个评委打分，所以，接收评委分数的操作，用循环改进</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>; x&lt;arr.length; x++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入第&quot;</span> + (x + <span class="number">1</span>) + <span class="string">&quot;个评委的打分：&quot;</span>);</span><br><span class="line">            arr[x] = sc.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//printArray(arr);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义方法实现获取数组中的最高分(数组最大值)，调用方法</span></span><br><span class="line">        <span class="keyword">int</span> max = getMax(arr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义方法实现获取数组中的最低分(数组最小值) ，调用方法</span></span><br><span class="line">        <span class="keyword">int</span> min = getMin(arr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义方法实现获取数组中的所有元素的和(数组元素求和) ，调用方法</span></span><br><span class="line">        <span class="keyword">int</span> sum = getSum(arr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//按照计算规则进行计算得到平均分</span></span><br><span class="line">        <span class="keyword">int</span> avg = (sum - max - min) / (arr.length - <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出平均分</span></span><br><span class="line">        System.out.println(<span class="string">&quot;选手的最终得分是：&quot;</span> + avg);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        两个明确：</span></span><br><span class="line"><span class="comment">            返回值类型：int</span></span><br><span class="line"><span class="comment">            参数：int[] arr</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getSum</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>; x&lt;arr.length; x++) &#123;</span><br><span class="line">            sum += arr[x];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        两个明确：</span></span><br><span class="line"><span class="comment">            返回值类型：int</span></span><br><span class="line"><span class="comment">            参数：int[] arr</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMin</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> min = arr[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">1</span>; x&lt;arr.length; x++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[x] &lt; min) &#123;</span><br><span class="line">                min = arr[x];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> min;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        两个明确：</span></span><br><span class="line"><span class="comment">            返回值类型：int</span></span><br><span class="line"><span class="comment">            参数：int[] arr</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMax</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = arr[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">1</span>; x&lt;arr.length; x++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[x] &gt; max) &#123;</span><br><span class="line">                max = arr[x];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//遍历数组</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printArray</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;[&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; arr.length; x++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (x == arr.length - <span class="number">1</span>) &#123;</span><br><span class="line">                System.out.print(arr[x]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.print(arr[x] + <span class="string">&quot;, &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;]&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Debug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>方法</title>
      <link href="/posts/ad01bc3e.html"/>
      <url>/posts/ad01bc3e.html</url>
      
        <content type="html"><![CDATA[<h2 id="方法概述"><a href="#方法概述" class="headerlink" title="方法概述"></a>方法概述</h2><h3 id="方法的概念（理解）"><a href="#方法的概念（理解）" class="headerlink" title="方法的概念（理解）"></a>方法的概念（理解）</h3><p>​    方法（method）是将具有独立功能的代码块组织成为一个整体，使其具有特殊功能的代码集</p><ul><li>注意：<ul><li>方法必须先创建才可以使用，该过程成为方法定义</li><li>方法创建后并不是直接可以运行的，需要手动使用后，才执行，该过程成为方法调用</li></ul></li></ul><h2 id="方法的定义和调用"><a href="#方法的定义和调用" class="headerlink" title="方法的定义和调用"></a>方法的定义和调用</h2><h3 id="无参数方法定义和调用（掌握）"><a href="#无参数方法定义和调用（掌握）" class="headerlink" title="无参数方法定义和调用（掌握）"></a>无参数方法定义和调用（掌握）</h3><ul><li><p>定义格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> 方法名 (   ) &#123;</span><br><span class="line">    <span class="comment">// 方法体;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method</span> <span class="params">(    )</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 方法体;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>调用格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">方法名();</span><br></pre></td></tr></table></figure></li><li><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">method();</span><br></pre></td></tr></table></figure></li><li><p>注意：</p><p>​    方法必须先定义，后调用，否则程序将报错</p></li></ul><h3 id="方法调用过程图解（理解）"><a href="#方法调用过程图解（理解）" class="headerlink" title="方法调用过程图解（理解）"></a>方法调用过程图解（理解）</h3><p><img src="https://cdn.jsdelivr.net/gh/heixiongwl/heixiong/wcsffdytj.png" alt="无参数方法调用图解"></p><ul><li>总结：每个方法在被调用执行的时候，都会进入栈内存，并且拥有自己独立的内存空间，方法内部代码调用完毕之后，会从栈内存中弹栈消失。</li></ul><h3 id="无参数方法的练习（应用）"><a href="#无参数方法的练习（应用）" class="headerlink" title="无参数方法的练习（应用）"></a>无参数方法的练习（应用）</h3><ul><li>需求：设计一个方法用于打印两个数中的较大数 </li><li>思路：<ul><li>①定义一个方法，用于打印两个数字中的较大数，例如getMax() </li><li>②方法中定义两个变量，用于保存两个数字 </li><li>③使用分支语句分两种情况对两个数字的大小关系进行处理 </li><li>④在main()方法中调用定义好的方法 </li></ul></li><li>代码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MethodTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//在main()方法中调用定义好的方法</span></span><br><span class="line">        getMax();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法，用于打印两个数字中的较大数，例如getMax()</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getMax</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//方法中定义两个变量，用于保存两个数字</span></span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用分支语句分两种情况对两个数字的大小关系进行处理</span></span><br><span class="line">        <span class="keyword">if</span>(a &gt; b) &#123;</span><br><span class="line">            System.out.println(a);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="带参数方法定义和调用"><a href="#带参数方法定义和调用" class="headerlink" title="带参数方法定义和调用"></a>带参数方法定义和调用</h2><h3 id="带参数方法定义和调用（掌握）"><a href="#带参数方法定义和调用（掌握）" class="headerlink" title="带参数方法定义和调用（掌握）"></a>带参数方法定义和调用（掌握）</h3><ul><li><p>定义格式：</p><p>参数：由数据类型和变量名组成 -  数据类型 变量名</p><p>参数范例：int a</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> 方法名 (参数<span class="number">1</span>) &#123;</span><br><span class="line">    方法体;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> 方法名 (参数<span class="number">1</span>, 参数<span class="number">2</span>, 参数<span class="number">3.</span>..) &#123;</span><br><span class="line">    方法体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">isEvenNumber</span><span class="params">(<span class="keyword">int</span> number)</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getMax</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>注意：</p><pre><code>  方法定义时，参数中的数据类型与变量名都不能缺少，缺少任意一个程序将报错  方法定义时，多个参数之间使用逗号( ，)分隔</code></pre></li></ul></li><li><p>调用格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">方法名(参数)；</span><br><span class="line"></span><br><span class="line">方法名(参数<span class="number">1</span>,参数<span class="number">2</span>);</span><br></pre></td></tr></table></figure></li><li><p>范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">isEvenNumber(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">getMax(<span class="number">10</span>,<span class="number">20</span>);</span><br></pre></td></tr></table></figure><ul><li>方法调用时，参数的数量与类型必须与方法定义中的设置相匹配，否则程序将报错 </li></ul></li></ul><h3 id="形参和实参（理解）"><a href="#形参和实参（理解）" class="headerlink" title="形参和实参（理解）"></a>形参和实参（理解）</h3><ol><li>形参：方法定义中的参数</li></ol><p>​          等同于变量定义格式，例如：int number</p><ol start="2"><li>实参：方法调用中的参数</li></ol><p>​          等同于使用变量或常量，例如： 10  number</p><h3 id="带参数方法练习（应用）"><a href="#带参数方法练习（应用）" class="headerlink" title="带参数方法练习（应用）"></a>带参数方法练习（应用）</h3><ul><li>需求：设计一个方法用于打印两个数中的较大数，数据来自于方法参数 }</li><li>思路：<ul><li>①定义一个方法，用于打印两个数字中的较大数，例如getMax() </li><li>②为方法定义两个参数，用于接收两个数字 </li><li>③使用分支语句分两种情况对两个数字的大小关系进行处理 </li><li>④在main()方法中调用定义好的方法（使用常量）</li><li>⑤在main()方法中调用定义好的方法（使用变量） </li></ul></li><li>代码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MethodTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//在main()方法中调用定义好的方法（使用常量）</span></span><br><span class="line">        getMax(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line">        <span class="comment">//调用方法的时候，人家要几个，你就给几个，人家要什么类型的，你就给什么类型的</span></span><br><span class="line">        <span class="comment">//getMax(30);</span></span><br><span class="line">        <span class="comment">//getMax(10.0,20.0);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//在main()方法中调用定义好的方法（使用变量）</span></span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">        getMax(a, b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法，用于打印两个数字中的较大数，例如getMax()</span></span><br><span class="line">    <span class="comment">//为方法定义两个参数，用于接收两个数字</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getMax</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//使用分支语句分两种情况对两个数字的大小关系进行处理</span></span><br><span class="line">        <span class="keyword">if</span>(a &gt; b) &#123;</span><br><span class="line">            System.out.println(a);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="带返回值方法的定义和调用"><a href="#带返回值方法的定义和调用" class="headerlink" title="带返回值方法的定义和调用"></a>带返回值方法的定义和调用</h2><h3 id="带返回值方法定义和调用（掌握）"><a href="#带返回值方法定义和调用（掌握）" class="headerlink" title="带返回值方法定义和调用（掌握）"></a>带返回值方法定义和调用（掌握）</h3><ul><li><p>定义格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> 数据类型 方法名 ( 参数 ) &#123; </span><br><span class="line">    <span class="keyword">return</span> 数据 ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>范例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isEvenNumber</span><span class="params">( <span class="keyword">int</span> number )</span> </span>&#123;           </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMax</span><span class="params">( <span class="keyword">int</span> a, <span class="keyword">int</span> b )</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span>  <span class="number">100</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>注意：<ul><li>方法定义时return后面的返回值与方法定义上的数据类型要匹配，否则程序将报错</li></ul></li></ul></li><li><p>调用格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">方法名 ( 参数 ) ;</span><br><span class="line">数据类型 变量名 = 方法名 ( 参数 ) ;</span><br></pre></td></tr></table></figure></li><li><p>范例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">isEvenNumber ( <span class="number">5</span> ) ;</span><br><span class="line"><span class="keyword">boolean</span>  flag =  isEvenNumber ( <span class="number">5</span> ); </span><br></pre></td></tr></table></figure><ul><li>注意：<ul><li>方法的返回值通常会使用变量接收，否则该返回值将无意义</li></ul></li></ul></li></ul><h3 id="带返回值方法练习（应用）"><a href="#带返回值方法练习（应用）" class="headerlink" title="带返回值方法练习（应用）"></a>带返回值方法练习（应用）</h3><ul><li><p>需求：设计一个方法可以获取两个数的较大值，数据来自于参数</p></li><li><p>思路：</p><ul><li>①定义一个方法，用于获取两个数字中的较大数 </li><li>②使用分支语句分两种情况对两个数字的大小关系进行处理 </li><li>③根据题设分别设置两种情况下对应的返回结果 </li><li>④在main()方法中调用定义好的方法并使用变量保存 </li><li>⑤在main()方法中调用定义好的方法并直接打印结果 </li></ul></li><li><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MethodTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//在main()方法中调用定义好的方法并使用变量保存</span></span><br><span class="line">        <span class="keyword">int</span> result = getMax(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line">        System.out.println(result);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//在main()方法中调用定义好的方法并直接打印结果</span></span><br><span class="line">        System.out.println(getMax(<span class="number">10</span>,<span class="number">20</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法，用于获取两个数字中的较大数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMax</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//使用分支语句分两种情况对两个数字的大小关系进行处理</span></span><br><span class="line">        <span class="comment">//根据题设分别设置两种情况下对应的返回结果</span></span><br><span class="line">        <span class="keyword">if</span>(a &gt; b) &#123;</span><br><span class="line">            <span class="keyword">return</span> a;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> b;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="方法的注意事项"><a href="#方法的注意事项" class="headerlink" title="方法的注意事项"></a>方法的注意事项</h2><h3 id="方法的注意事项（掌握）"><a href="#方法的注意事项（掌握）" class="headerlink" title="方法的注意事项（掌握）"></a>方法的注意事项（掌握）</h3><ul><li><p>方法不能嵌套定义</p><ul><li><p>示例代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MethodDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">methodOne</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">methodTwo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">               <span class="comment">// 这里会引发编译错误!!!</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>void表示无返回值，可以省略return，也可以单独的书写return，后面不加数据</p><ul><li><p>示例代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MethodDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">methodTwo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//return 100; 编译错误，因为没有具体返回值类型</span></span><br><span class="line">        <span class="keyword">return</span>;    </span><br><span class="line">        <span class="comment">//System.out.println(100); return语句后面不能跟数据或代码</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="方法的通用格式（掌握）"><a href="#方法的通用格式（掌握）" class="headerlink" title="方法的通用格式（掌握）"></a>方法的通用格式（掌握）</h3><ul><li><p>格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> 返回值类型 方法名(参数) &#123;</span><br><span class="line">   方法体; </span><br><span class="line">   <span class="keyword">return</span> 数据 ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>解释：</p><ul><li><p>public static     修饰符，目前先记住这个格式</p><p>   返回值类型    方法操作完毕之后返回的数据的数据类型</p><p>​            如果方法操作完毕，没有数据返回，这里写void，而且方法体中一般不写return</p><p>   方法名        调用方法时候使用的标识</p><p>   参数        由数据类型和变量名组成，多个参数之间用逗号隔开</p><p>   方法体        完成功能的代码块</p><p>   return        如果方法操作完毕，有数据返回，用于把数据返回给调用者</p></li></ul></li><li><p>定义方法时，要做到两个明确</p><ul><li>明确返回值类型：主要是明确方法操作完毕之后是否有数据返回，如果没有，写void；如果有，写对应的数据类型</li><li>明确参数：主要是明确参数的类型和数量</li></ul></li><li><p>调用方法时的注意：</p><ul><li>void类型的方法，直接调用即可</li><li>非void类型的方法，推荐用变量接收调用</li></ul></li></ul><h2 id="方法重载"><a href="#方法重载" class="headerlink" title="方法重载"></a>方法重载</h2><h3 id="方法重载（理解）"><a href="#方法重载（理解）" class="headerlink" title="方法重载（理解）"></a>方法重载（理解）</h3><ul><li><p>方法重载概念</p><p>方法重载指同一个类中定义的多个方法之间的关系，满足下列条件的多个方法相互构成重载</p><ul><li>多个方法在同一个类中</li><li>多个方法具有相同的方法名</li><li>多个方法的参数不相同，类型不同或者数量不同</li></ul></li><li><p>注意：</p><ul><li>重载仅对应方法的定义，与方法的调用无关，调用方式参照标准格式</li><li>重载仅针对同一个类中方法的名称与参数进行识别，与返回值无关，换句话说不能通过返回值来判定两个方法是否相互构成重载</li></ul></li><li><p>正确范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MethodDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">fn</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">fn</span><span class="params">(<span class="keyword">double</span> a)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MethodDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">float</span> <span class="title">fn</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">fn</span><span class="params">(<span class="keyword">int</span> a , <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>错误范例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MethodDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">fn</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">fn</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;     <span class="comment">/*错误原因：重载与返回值无关*/</span></span><br><span class="line">        <span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MethodDemo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">fn</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MethodDemo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">fn</span><span class="params">(<span class="keyword">double</span> a)</span> </span>&#123; <span class="comment">/*错误原因：这是两个类的两个fn方法*/</span></span><br><span class="line">        <span class="comment">//方法体</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="方法重载练习（掌握）"><a href="#方法重载练习（掌握）" class="headerlink" title="方法重载练习（掌握）"></a>方法重载练习（掌握）</h3><ul><li><p>需求：使用方法重载的思想，设计比较两个整数是否相同的方法，兼容全整数类型（byte,short,int,long） </p></li><li><p>思路：</p><ul><li>①定义比较两个数字的是否相同的方法compare()方法，参数选择两个int型参数</li><li>②定义对应的重载方法，变更对应的参数类型，参数变更为两个long型参数</li><li>③定义所有的重载方法，两个byte类型与两个short类型参数 </li><li>④完成方法的调用，测试运行结果 </li></ul></li><li><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MethodTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//调用方法</span></span><br><span class="line">        System.out.println(compare(<span class="number">10</span>, <span class="number">20</span>));</span><br><span class="line">        System.out.println(compare((<span class="keyword">byte</span>) <span class="number">10</span>, (<span class="keyword">byte</span>) <span class="number">20</span>));</span><br><span class="line">        System.out.println(compare((<span class="keyword">short</span>) <span class="number">10</span>, (<span class="keyword">short</span>) <span class="number">20</span>));</span><br><span class="line">        System.out.println(compare(<span class="number">10L</span>, <span class="number">20L</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//int</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;int&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> a == b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//byte</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">compare</span><span class="params">(<span class="keyword">byte</span> a, <span class="keyword">byte</span> b)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;byte&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> a == b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//short</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">compare</span><span class="params">(<span class="keyword">short</span> a, <span class="keyword">short</span> b)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;short&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> a == b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//long</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">compare</span><span class="params">(<span class="keyword">long</span> a, <span class="keyword">long</span> b)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;long&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> a == b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="方法的参数传递"><a href="#方法的参数传递" class="headerlink" title="方法的参数传递"></a>方法的参数传递</h2><h3 id="方法参数传递基本类型（理解）"><a href="#方法参数传递基本类型（理解）" class="headerlink" title="方法参数传递基本类型（理解）"></a>方法参数传递基本类型（理解）</h3><ul><li><p>测试代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArgsDemo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> number = <span class="number">100</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用change方法前：&quot;</span> + number);</span><br><span class="line">        change(number);</span><br><span class="line">        System.out.println(<span class="string">&quot;调用change方法后：&quot;</span> + number);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> number)</span> </span>&#123;</span><br><span class="line">        number = <span class="number">200</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>结论：</p><ul><li>基本数据类型的参数，形式参数的改变，不影响实际参数 </li></ul></li><li><p>结论依据：</p><ul><li><p>每个方法在栈内存中，都会有独立的栈空间，方法运行结束后就会弹栈消失</p><p><img src="https://cdn.jsdelivr.net/gh/heixiongwl/heixiong/ffcc-jbsjlx.png" alt="方法传参-基本数据类型"></p></li></ul></li></ul><h3 id="方法参数传递引用类型（理解）"><a href="#方法参数传递引用类型（理解）" class="headerlink" title="方法参数传递引用类型（理解）"></a>方法参数传递引用类型（理解）</h3><ul><li><p>测试代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArgsDemo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>&#125;;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用change方法前：&quot;</span> + arr[<span class="number">1</span>]);</span><br><span class="line">        change(arr);</span><br><span class="line">        System.out.println(<span class="string">&quot;调用change方法后：&quot;</span> + arr[<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        arr[<span class="number">1</span>] = <span class="number">200</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>结论：</p><ul><li>对于引用类型的参数，形式参数的改变，影响实际参数的值 </li></ul></li><li><p>结论依据：</p><ul><li><p>引用数据类型的传参，传入的是地址值，内存中会造成两个引用指向同一个内存的效果，所以即使方法弹栈，堆内存中的数据也已经是改变后的结果 </p><p>  <img src="https://cdn.jsdelivr.net/gh/heixiongwl/heixiong/ffcc-yysjlx.png" alt="方法传参-引用数据类型"></p></li></ul></li></ul><h3 id="数组遍历（应用）"><a href="#数组遍历（应用）" class="headerlink" title="数组遍历（应用）"></a>数组遍历（应用）</h3><ul><li><p>需求：设计一个方法用于数组遍历，要求遍历的结果是在一行上的。例如：[11, 22, 33, 44, 55] </p></li><li><p>思路：</p><ul><li><p>①因为要求结果在一行上输出，所以这里需要在学习一个新的输出语句System.out.print(“内容”);</p><p>System.out.println(“内容”); 输出内容并换行</p><p>System.out.print(“内容”); 输出内容不换行</p><p>System.out.println(); 起到换行的作用</p></li><li><p>②定义一个数组，用静态初始化完成数组元素初始化</p></li><li><p>③定义一个方法，用数组遍历通用格式对数组进行遍历</p></li><li><p>④用新的输出语句修改遍历操作</p></li><li><p>⑤调用遍历方法</p></li></ul></li><li><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MethodTest01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个数组，用静态初始化完成数组元素初始化</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用方法</span></span><br><span class="line">        printArray(arr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法，用数组遍历通用格式对数组进行遍历</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        两个明确：</span></span><br><span class="line"><span class="comment">            返回值类型：void</span></span><br><span class="line"><span class="comment">            参数：int[] arr</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printArray</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;[&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>; x&lt;arr.length; x++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(x == arr.length-<span class="number">1</span>) &#123;</span><br><span class="line">                System.out.print(arr[x]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.print(arr[x]+<span class="string">&quot;, &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;]&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="数组最大值（应用）"><a href="#数组最大值（应用）" class="headerlink" title="数组最大值（应用）"></a>数组最大值（应用）</h3><ul><li><p>需求：设计一个方法用于获取数组中元素的最大值 </p></li><li><p>思路：</p><ul><li>①定义一个数组，用静态初始化完成数组元素初始化</li><li>②定义一个方法，用来获取数组中的最大值，最值的认知和讲解我们在数组中已经讲解过了</li><li>③调用获取最大值方法，用变量接收返回结果</li><li>④把结果输出在控制台</li></ul></li><li><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MethodTest02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个数组，用静态初始化完成数组元素初始化</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">12</span>, <span class="number">45</span>, <span class="number">98</span>, <span class="number">73</span>, <span class="number">60</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用获取最大值方法，用变量接收返回结果</span></span><br><span class="line">        <span class="keyword">int</span> number = getMax(arr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//把结果输出在控制台</span></span><br><span class="line">        System.out.println(<span class="string">&quot;number:&quot;</span> + number);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义一个方法，用来获取数组中的最大值</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        两个明确：</span></span><br><span class="line"><span class="comment">            返回值类型：int</span></span><br><span class="line"><span class="comment">            参数：int[] arr</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMax</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = arr[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">1</span>; x&lt;arr.length; x++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[x] &gt; max) &#123;</span><br><span class="line">                max = arr[x];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数组</title>
      <link href="/posts/340249a9.html"/>
      <url>/posts/340249a9.html</url>
      
        <content type="html"><![CDATA[<h3 id="什么是数组【理解】"><a href="#什么是数组【理解】" class="headerlink" title="什么是数组【理解】"></a>什么是数组【理解】</h3><p>​    数组就是存储数据长度固定的容器，存储多个数据的数据类型要一致。 </p><h3 id="数组定义格式【记忆】"><a href="#数组定义格式【记忆】" class="headerlink" title="数组定义格式【记忆】"></a>数组定义格式【记忆】</h3><h4 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h4><p>​    数据类型[] 数组名</p><p>​    示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] arr;        </span><br><span class="line"><span class="keyword">double</span>[] arr;      </span><br><span class="line"><span class="keyword">char</span>[] arr;</span><br></pre></td></tr></table></figure><h4 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h4><p>​    数据类型 数组名[]</p><p>​    示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> arr[];</span><br><span class="line"><span class="keyword">double</span> arr[];</span><br><span class="line"><span class="keyword">char</span> arr[];</span><br></pre></td></tr></table></figure><h3 id="数组动态初始化【应用】"><a href="#数组动态初始化【应用】" class="headerlink" title="数组动态初始化【应用】"></a>数组动态初始化【应用】</h3><h4 id="什么是动态初始化"><a href="#什么是动态初始化" class="headerlink" title="什么是动态初始化"></a>什么是动态初始化</h4><p>​    数组动态初始化就是只给定数组的长度，由系统给出默认初始化值</p><h4 id="动态初始化格式"><a href="#动态初始化格式" class="headerlink" title="动态初始化格式"></a>动态初始化格式</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数据类型[] 数组名 = <span class="keyword">new</span> 数据类型[数组长度];</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br></pre></td></tr></table></figure><h4 id="动态初始化格式详解"><a href="#动态初始化格式详解" class="headerlink" title="动态初始化格式详解"></a>动态初始化格式详解</h4><ul><li><p>等号左边：</p><ul><li><p>int:数组的数据类型</p></li><li><p>[]:代表这是一个数组</p></li><li><p>arr:代表数组的名称</p></li></ul></li><li><p>等号右边：</p><ul><li><p>new:为数组开辟内存空间</p></li><li><p>int:数组的数据类型</p></li><li><p>[]:代表这是一个数组</p></li><li><p>5:代表数组的长度</p></li></ul></li></ul><h3 id="数组元素访问【应用】"><a href="#数组元素访问【应用】" class="headerlink" title="数组元素访问【应用】"></a>数组元素访问【应用】</h3><h4 id="什么是索引"><a href="#什么是索引" class="headerlink" title="什么是索引"></a>什么是索引</h4><p>​    每一个存储到数组的元素，都会自动的拥有一个编号，从0开始。</p><p>​    这个自动编号称为数组索引(index)，可以通过数组的索引访问到数组中的元素。     </p><h4 id="访问数组元素格式"><a href="#访问数组元素格式" class="headerlink" title="访问数组元素格式"></a>访问数组元素格式</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数组名[索引];</span><br></pre></td></tr></table></figure><h4 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出数组名</span></span><br><span class="line">        System.out.println(arr); <span class="comment">//[I@880ec60</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出数组中的元素</span></span><br><span class="line">        System.out.println(arr[<span class="number">0</span>]);</span><br><span class="line">        System.out.println(arr[<span class="number">1</span>]);</span><br><span class="line">        System.out.println(arr[<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="内存分配【理解】"><a href="#内存分配【理解】" class="headerlink" title="内存分配【理解】"></a>内存分配【理解】</h3><h4 id="内存概述"><a href="#内存概述" class="headerlink" title="内存概述"></a>内存概述</h4><p>​    内存是计算机中的重要原件，临时存储区域，作用是运行程序。</p><p>​    我们编写的程序是存放在硬盘中的，在硬盘中的程序是不会运行的。</p><p>​    必须放进内存中才能运行，运行完毕后会清空内存。 </p><p>​    Java虚拟机要运行程序，必须要对内存进行空间的分配和管理。 </p><h4 id="java中的内存分配"><a href="#java中的内存分配" class="headerlink" title="java中的内存分配"></a>java中的内存分配</h4><ul><li>目前我们只需要记住两个内存，分别是：栈内存和堆内存</li></ul><table><thead><tr><th>区域名称</th><th>作用</th></tr></thead><tbody><tr><td>寄存器</td><td>给CPU使用，和我们开发无关。</td></tr><tr><td>本地方法栈</td><td>JVM在使用操作系统功能的时候使用，和我们开发无关。</td></tr><tr><td>方法区</td><td>存储可以运行的class文件。</td></tr><tr><td>堆内存</td><td>存储对象或者数组，new来创建的，都存储在堆内存。</td></tr><tr><td>方法栈</td><td>方法运行时使用的内存，比如main方法运行，进入方法栈中执行。</td></tr></tbody></table><h3 id="数组静态初始化【应用】"><a href="#数组静态初始化【应用】" class="headerlink" title="数组静态初始化【应用】"></a>数组静态初始化【应用】</h3><h4 id="什么是静态初始化"><a href="#什么是静态初始化" class="headerlink" title="什么是静态初始化"></a>什么是静态初始化</h4><p>​    在创建数组时，直接将元素确定    </p><h4 id="静态初始化格式"><a href="#静态初始化格式" class="headerlink" title="静态初始化格式"></a>静态初始化格式</h4><ul><li><p>完整版格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数据类型[] 数组名 = <span class="keyword">new</span> 数据类型[]&#123;元素<span class="number">1</span>,元素<span class="number">2</span>,...&#125;;</span><br></pre></td></tr></table></figure></li><li><p>简化版格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数据类型[] 数组名 = &#123;元素<span class="number">1</span>,元素<span class="number">2</span>,...&#125;;</span><br></pre></td></tr></table></figure></li></ul><h4 id="示例代码-1"><a href="#示例代码-1" class="headerlink" title="示例代码"></a>示例代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义数组</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出数组名</span></span><br><span class="line">        System.out.println(arr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出数组中的元素</span></span><br><span class="line">        System.out.println(arr[<span class="number">0</span>]);</span><br><span class="line">        System.out.println(arr[<span class="number">1</span>]);</span><br><span class="line">        System.out.println(arr[<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数组操作的两个常见小问题【应用】"><a href="#数组操作的两个常见小问题【应用】" class="headerlink" title="数组操作的两个常见小问题【应用】"></a>数组操作的两个常见小问题【应用】</h3><h4 id="索引越界异常"><a href="#索引越界异常" class="headerlink" title="索引越界异常"></a>索引越界异常</h4><ul><li><p>出现原因</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line">        System.out.println(arr[<span class="number">3</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数组长度为3，索引范围是0~2，但是我们却访问了一个3的索引。</p><p>程序运行后，将会抛出ArrayIndexOutOfBoundsException 数组越界异常。在开发中，数组的越界异常是不能出现的，一旦出现了，就必须要修改我们编写的代码。 </p></li><li><p>解决方案</p><p>将错误的索引修改为正确的索引范围即可！</p></li></ul><h4 id="空指针异常"><a href="#空指针异常" class="headerlink" title="空指针异常"></a>空指针异常</h4><ul><li><p>出现原因</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//把null赋值给数组</span></span><br><span class="line">        arr = <span class="keyword">null</span>;</span><br><span class="line">        System.out.println(arr[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>arr = null 这行代码，意味着变量arr将不会在保存数组的内存地址，也就不允许再操作数组了，因此运行的时候会抛出 NullPointerException 空指针异常。在开发中，数组的越界异常是不能出现的，一旦出现了，就必须要修改我们编写的代码。</p></li><li><p>解决方案</p><p>给数组一个真正的堆内存空间引用即可！</p></li></ul><h3 id="数组遍历【应用】"><a href="#数组遍历【应用】" class="headerlink" title="数组遍历【应用】"></a>数组遍历【应用】</h3><ul><li><p>数组遍历：就是将数组中的每个元素分别获取出来，就是遍历。遍历也是数组操作中的基石。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayTest01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line">        System.out.println(arr[<span class="number">0</span>]);</span><br><span class="line">        System.out.println(arr[<span class="number">1</span>]);</span><br><span class="line">        System.out.println(arr[<span class="number">2</span>]);</span><br><span class="line">        System.out.println(arr[<span class="number">3</span>]);</span><br><span class="line">        System.out.println(arr[<span class="number">4</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 以上代码是可以将数组中每个元素全部遍历出来，但是如果数组元素非常多，这种写法肯定不行，因此我们需要改造成循环的写法。数组的索引是 0 到 lenght-1 ，可以作为循环的条件出现。 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayTest01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义数组</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//使用通用的遍历格式</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>; x&lt;arr.length; x++) &#123;</span><br><span class="line">            System.out.println(arr[x]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="数组最值【应用】"><a href="#数组最值【应用】" class="headerlink" title="数组最值【应用】"></a>数组最值【应用】</h3><ul><li><p>最大值获取：从数组的所有元素中找出最大值。</p></li><li><p>实现思路：</p><ul><li>定义变量，保存数组0索引上的元素</li><li>遍历数组，获取出数组中的每个元素</li><li>将遍历到的元素和保存数组0索引上值的变量进行比较</li><li>如果数组元素的值大于了变量的值，变量记录住新的值</li><li>数组循环遍历结束，变量保存的就是数组中的最大值 </li></ul></li><li><p>代码实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayTest02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义数组</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">12</span>, <span class="number">45</span>, <span class="number">98</span>, <span class="number">73</span>, <span class="number">60</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义一个变量，用于保存最大值</span></span><br><span class="line">        <span class="comment">//取数组中第一个数据作为变量的初始值</span></span><br><span class="line">        <span class="keyword">int</span> max = arr[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//与数组中剩余的数据逐个比对，每次比对将最大值保存到变量中</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">1</span>; x&lt;arr.length; x++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[x] &gt; max) &#123;</span><br><span class="line">                max = arr[x];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//循环结束后打印变量的值</span></span><br><span class="line">        System.out.println(<span class="string">&quot;max:&quot;</span> + max);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>switch&amp;循环语句</title>
      <link href="/posts/7d584cc.html"/>
      <url>/posts/7d584cc.html</url>
      
        <content type="html"><![CDATA[<h2 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h2><h3 id="switch语句结构（掌握）"><a href="#switch语句结构（掌握）" class="headerlink" title="switch语句结构（掌握）"></a>switch语句结构（掌握）</h3><ul><li><p>格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (表达式) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        语句体<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        语句体<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        语句体n+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>执行流程：</p><ul><li>首先计算出表达式的值 </li><li>其次，和case依次比较，一旦有对应的值，就会执行相应的语句，在执行的过程中，遇到break就会结 束。 </li><li>最后，如果所有的case都和表达式的值不匹配，就会执行default语句体部分，然后程序结束掉。 </li></ul></li></ul><h3 id="switch语句练习-春夏秋冬（应用）"><a href="#switch语句练习-春夏秋冬（应用）" class="headerlink" title="switch语句练习-春夏秋冬（应用）"></a>switch语句练习-春夏秋冬（应用）</h3><ul><li>需求：一年有12个月，分属于春夏秋冬4个季节，键盘录入一个月份，请用程序实现判断该月份属于哪个季节，并输出。 </li><li>运行结果：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">春：3、4、5</span><br><span class="line">夏：6、7、8</span><br><span class="line">秋：9、10、11</span><br><span class="line">冬：1、2、12</span><br></pre></td></tr></table></figure><ul><li>示例代码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//键盘录入月份数据，使用变量接收</span></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个月份：&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> month = sc.nextInt();</span><br><span class="line">        <span class="comment">//case穿透</span></span><br><span class="line">        <span class="keyword">switch</span>(month) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;冬季&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;春季&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;夏季&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;秋季&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;你输入的月份有误&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>注意：如果switch中得case，没有对应break的话，则会出现case穿透的现象。</li></ul><h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2><h3 id="for循环结构（掌握）"><a href="#for循环结构（掌握）" class="headerlink" title="for循环结构（掌握）"></a>for循环结构（掌握）</h3><ul><li><p>循环：</p><p>循环语句可以在满足循环条件的情况下，反复执行某一段代码，这段被重复执行的代码被称为循环体语句，当反复 执行这个循环体时，需要在合适的时候把循环判断条件修改为false，从而结束循环，否则循环将一直执行下去，形 成死循环。 </p></li><li><p>for循环格式：</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (初始化语句;条件判断语句;条件控制语句) &#123;</span><br><span class="line">    循环体语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>格式解释：</p><ul><li>初始化语句：  用于表示循环开启时的起始状态，简单说就是循环开始的时候什么样</li><li>条件判断语句：用于表示循环反复执行的条件，简单说就是判断循环是否能一直执行下去</li><li>循环体语句：  用于表示循环反复执行的内容，简单说就是循环反复执行的事情</li><li>条件控制语句：用于表示循环执行中每次变化的内容，简单说就是控制循环是否能执行下去</li></ul></li><li><p>执行流程：</p><p>①执行初始化语句</p><p>②执行条件判断语句，看其结果是true还是false</p><p>​             如果是false，循环结束</p><p>​             如果是true，继续执行</p><p>③执行循环体语句</p><p>④执行条件控制语句</p><p>⑤回到②继续</p></li></ul><h3 id="for循环练习-输出数据（应用）"><a href="#for循环练习-输出数据（应用）" class="headerlink" title="for循环练习-输出数据（应用）"></a>for循环练习-输出数据（应用）</h3><ul><li>需求：在控制台输出1-5和5-1的数据 </li><li>示例代码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForTest01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//需求：输出数据1-5</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">5</span>; i++) &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line">        <span class="comment">//需求：输出数据5-1</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">5</span>; i&gt;=<span class="number">1</span>; i--) &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="for循环练习-求和（应用）"><a href="#for循环练习-求和（应用）" class="headerlink" title="for循环练习-求和（应用）"></a>for循环练习-求和（应用）</h3><ul><li>需求：求1-5之间的数据和，并把求和结果在控制台输出 </li><li>示例代码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForTest02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//求和的最终结果必须保存起来，需要定义一个变量，用于保存求和的结果，初始值为0</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//从1开始到5结束的数据，使用循环结构完成</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">5</span>; i++) &#123;</span><br><span class="line">            <span class="comment">//将反复进行的事情写入循环结构内部</span></span><br><span class="line">             <span class="comment">// 此处反复进行的事情是将数据 i 加到用于保存最终求和的变量 sum 中</span></span><br><span class="line">            sum += i;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">                sum += i;    sum = sum + i;</span></span><br><span class="line"><span class="comment">                第一次：sum = sum + i = 0 + 1 = 1;</span></span><br><span class="line"><span class="comment">                第二次：sum = sum + i = 1 + 2 = 3;</span></span><br><span class="line"><span class="comment">                第三次：sum = sum + i = 3 + 3 = 6;</span></span><br><span class="line"><span class="comment">                第四次：sum = sum + i = 6 + 4 = 10;</span></span><br><span class="line"><span class="comment">                第五次：sum = sum + i = 10 + 5 = 15;</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//当循环执行完毕时，将最终数据打印出来</span></span><br><span class="line">        System.out.println(<span class="string">&quot;1-5之间的数据和是：&quot;</span> + sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>本题要点：<ul><li>今后遇到的需求中，如果带有求和二字，请立即联想到求和变量</li><li>求和变量的定义位置，必须在循环外部，如果在循环内部则计算出的数据将是错误的</li></ul></li></ul><h3 id="for循环练习-求偶数和（应用）"><a href="#for循环练习-求偶数和（应用）" class="headerlink" title="for循环练习-求偶数和（应用）"></a>for循环练习-求偶数和（应用）</h3><ul><li>需求：求1-100之间的偶数和，并把求和结果在控制台输出 }</li><li>示例代码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForTest03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//求和的最终结果必须保存起来，需要定义一个变量，用于保存求和的结果，初始值为0</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//对1-100的数据求和与1-5的数据求和几乎完全一样，仅仅是结束条件不同</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">100</span>; i++) &#123;</span><br><span class="line">            <span class="comment">//对1-100的偶数求和，需要对求和操作添加限制条件，判断是否是偶数</span></span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                sum += i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//当循环执行完毕时，将最终数据打印出来</span></span><br><span class="line">        System.out.println(<span class="string">&quot;1-100之间的偶数和是：&quot;</span> + sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="for循环练习-水仙花（应用）"><a href="#for循环练习-水仙花（应用）" class="headerlink" title="for循环练习-水仙花（应用）"></a>for循环练习-水仙花（应用）</h3><ul><li>需求：在控制台输出所有的“水仙花数” </li><li>解释：什么是水仙花数？<ul><li>水仙花数，指的是一个三位数，个位、十位、百位的数字立方和等于原数<ul><li>例如<code>153  3*3*3 + 5*5*5 + 1*1*1 = 153</code></li></ul></li></ul></li><li>思路：<ol><li>获取所有的三位数，准备进行筛选，最小的三位数为100，最大的三位数为999，使用for循环获取</li><li>获取每一个三位数的个位，十位，百位，做if语句判断是否是水仙花数</li></ol></li><li>示例代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForTest04</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//输出所有的水仙花数必然要使用到循环，遍历所有的三位数，三位数从100开始，到999结束</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">100</span>; i&lt;<span class="number">1000</span>; i++) &#123;</span><br><span class="line">            <span class="comment">//在计算之前获取三位数中每个位上的值</span></span><br><span class="line">            <span class="keyword">int</span> ge = i%<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">int</span> shi = i/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">int</span> bai = i/<span class="number">10</span>/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//判定条件是将三位数中的每个数值取出来，计算立方和后与原始数字比较是否相等</span></span><br><span class="line">            <span class="keyword">if</span>(ge*ge*ge + shi*shi*shi + bai*bai*bai == i) &#123;</span><br><span class="line">                <span class="comment">//输出满足条件的数字就是水仙花数</span></span><br><span class="line">                System.out.println(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="for循环练习-统计水仙花数个数（应用）"><a href="#for循环练习-统计水仙花数个数（应用）" class="headerlink" title="for循环练习-统计水仙花数个数（应用）"></a>for循环练习-统计水仙花数个数（应用）</h3><ul><li>需求：统计“水仙花数”一共有多少个，并在控制台输出个数 </li><li>示例代码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ForTest05</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义变量count，用于保存“水仙花数”的数量，初始值为0</span></span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//输出所有的水仙花数必然要使用到循环，遍历所有的三位数，三位数从100开始，到999结束</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">100</span>; i&lt;<span class="number">1000</span>; i++) &#123;</span><br><span class="line">            <span class="comment">//在计算之前获取三位数中每个位上的值</span></span><br><span class="line">            <span class="keyword">int</span> ge = i%<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">int</span> shi = i/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">int</span> bai = i/<span class="number">10</span>/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">            <span class="comment">//在判定水仙花数的过程中，满足条件不再输出，更改为修改count的值，使count+1</span></span><br><span class="line">            <span class="keyword">if</span>(ge*ge*ge + shi*shi*shi + bai*bai*bai == i) &#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//打印输出最终结果</span></span><br><span class="line">        System.out.println(<span class="string">&quot;水仙花共有：&quot;</span> + count + <span class="string">&quot;个&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>本题要点：<ul><li>今后如果需求带有统计xxx，请先想到计数器变量</li><li>计数器变量定义的位置，必须在循环外部</li></ul></li></ul><h2 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h2><h3 id="while结构（掌握）"><a href="#while结构（掌握）" class="headerlink" title="while结构（掌握）"></a>while结构（掌握）</h3><ul><li><p>while循环完整格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">初始化语句;</span><br><span class="line"><span class="keyword">while</span> (条件判断语句) &#123;</span><br><span class="line">    循环体语句;</span><br><span class="line">    条件控制语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>while循环执行流程：</p><p>①执行初始化语句</p><p>②执行条件判断语句，看其结果是true还是false</p><p>​             如果是false，循环结束</p><p>​             如果是true，继续执行</p><p>③执行循环体语句</p><p>④执行条件控制语句</p><p>⑤回到②继续</p></li><li><p>示例代码：</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WhileDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//需求：在控制台输出5次&quot;HelloWorld&quot;</span></span><br><span class="line">        <span class="comment">//for循环实现</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">5</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line">        <span class="comment">//while循环实现</span></span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(j&lt;=<span class="number">5</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="while循环练习-珠穆朗玛峰（应用）"><a href="#while循环练习-珠穆朗玛峰（应用）" class="headerlink" title="while循环练习-珠穆朗玛峰（应用）"></a>while循环练习-珠穆朗玛峰（应用）</h3><ul><li>需求：世界最高山峰是珠穆朗玛峰(8844.43米=8844430毫米)，假如我有一张足够大的纸，它的厚度是0.1毫米。请问，我折叠多少次，可以折成珠穆朗玛峰的高度?</li><li>示例代码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WhileTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个计数器，初始值为0</span></span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//定义纸张厚度</span></span><br><span class="line">        <span class="keyword">double</span> paper = <span class="number">0.1</span>;</span><br><span class="line">        <span class="comment">//定义珠穆朗玛峰的高度</span></span><br><span class="line">        <span class="keyword">int</span> zf = <span class="number">8844430</span>;</span><br><span class="line">        <span class="comment">//因为要反复折叠，所以要使用循环，但是不知道折叠多少次，这种情况下更适合使用while循环</span></span><br><span class="line">        <span class="comment">//折叠的过程中当纸张厚度大于珠峰就停止了，因此继续执行的要求是纸张厚度小于珠峰高度</span></span><br><span class="line">        <span class="keyword">while</span>(paper &lt;= zf) &#123;</span><br><span class="line">            <span class="comment">//循环的执行过程中每次纸张折叠，纸张的厚度要加倍</span></span><br><span class="line">            paper *= <span class="number">2</span>;</span><br><span class="line">            <span class="comment">//在循环中执行累加，对应折叠了多少次</span></span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//打印计数器的值</span></span><br><span class="line">        System.out.println(<span class="string">&quot;需要折叠：&quot;</span> + count + <span class="string">&quot;次&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="循环细节"><a href="#循环细节" class="headerlink" title="循环细节"></a>循环细节</h2><h3 id="do…while循环结构（掌握）"><a href="#do…while循环结构（掌握）" class="headerlink" title="do…while循环结构（掌握）"></a>do…while循环结构（掌握）</h3><ul><li><p>完整格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">初始化语句;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    循环体语句;</span><br><span class="line">    条件控制语句;</span><br><span class="line">&#125;<span class="keyword">while</span>(条件判断语句);</span><br></pre></td></tr></table></figure></li><li><p>执行流程：</p><p>① 执行初始化语句</p><p>② 执行循环体语句</p><p>③ 执行条件控制语句</p><p>④ 执行条件判断语句，看其结果是true还是false</p><p>如果是false，循环结束</p><p>如果是true，继续执行</p><p>⑤ 回到②继续</p></li><li><p>示例代码：</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DoWhileDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//需求：在控制台输出5次&quot;HelloWorld&quot;</span></span><br><span class="line">        <span class="comment">//for循环实现</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">5</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line">        <span class="comment">//do...while循环实现</span></span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line">            j++;</span><br><span class="line">        &#125;<span class="keyword">while</span>(j&lt;=<span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-三种循环的区别（理解）"><a href="#4-2-三种循环的区别（理解）" class="headerlink" title="4.2 三种循环的区别（理解）"></a>4.2 三种循环的区别（理解）</h3><ul><li>三种循环的区别<ul><li>for循环和while循环先判断条件是否成立，然后决定是否执行循环体（先判断后执行）</li><li>do…while循环先执行一次循环体，然后判断条件是否成立，是否继续执行循环体（先执行后判断）</li></ul></li><li>for循环和while的区别<ul><li>条件控制语句所控制的自增变量，因为归属for循环的语法结构中，在for循环结束后，就不能再次被访问到了</li><li>条件控制语句所控制的自增变量，对于while循环来说不归属其语法结构中，在while循环结束后，该变量还可以继续使用</li></ul></li><li>死循环（无限循环）的三种格式<ol><li>for(;;){}</li><li>while(true){}</li><li>do {} while(true);</li></ol></li></ul><h3 id="跳转控制语句（掌握）"><a href="#跳转控制语句（掌握）" class="headerlink" title="跳转控制语句（掌握）"></a>跳转控制语句（掌握）</h3><ul><li>跳转控制语句（break）<ul><li>跳出循环，结束循环</li></ul></li><li>跳转控制语句（continue）<ul><li>跳过本次循环，继续下次循环</li></ul></li><li>注意： continue只能在循环中进行使用！</li></ul><h3 id="循环嵌套（理解）"><a href="#循环嵌套（理解）" class="headerlink" title="循环嵌套（理解）"></a>循环嵌套（理解）</h3><ul><li><p>循环嵌套概述：在循环中，继续定义循环</p></li><li><p>示例代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       <span class="comment">//外循环控制小时的范围，内循环控制分钟的范围</span></span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> hour = <span class="number">0</span>; hour &lt; <span class="number">24</span>; hour++) &#123;</span><br><span class="line">           <span class="keyword">for</span> (<span class="keyword">int</span> minute = <span class="number">0</span>; minute &lt; <span class="number">60</span>; minute++) &#123;</span><br><span class="line">               System.out.println(hour + <span class="string">&quot;时&quot;</span> + minute + <span class="string">&quot;分&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li><li><p>理解：</p><ul><li>请反复理解这句话（整个内循环，就是外循环的一个循环体，内部循环体没有执行完毕，外循环是不会继续向下执行的）</li></ul></li><li><p>结论：</p><ul><li>外循环执行一次，内循环执行一圈</li></ul></li></ul><h2 id="Random"><a href="#Random" class="headerlink" title="Random"></a>Random</h2><h3 id="Random产生随机数（掌握）"><a href="#Random产生随机数（掌握）" class="headerlink" title="Random产生随机数（掌握）"></a>Random产生随机数（掌握）</h3><ul><li><p>概述：</p><ul><li>Random类似Scanner，也是Java提供好的API，内部提供了产生随机数的功能<ul><li>API后续课程详细讲解，现在可以简单理解为Java已经写好的代码</li></ul></li></ul></li><li><p>使用步骤：</p><ol><li><p>导入包</p><p>import java.util.Random;</p></li><li><p>创建对象</p><p>Random r = new Random();</p></li><li><p>产生随机数</p><p>int num = r.nextInt(10);</p><p>解释： 10代表的是一个范围，如果括号写10，产生的随机数就是0-9，括号写20，参数的随机数则是0-19</p></li></ol></li><li><p>示例代码：</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RandomDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        Random r = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="comment">//用循环获取10个随机数</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="comment">//获取随机数</span></span><br><span class="line">            <span class="keyword">int</span> number = r.nextInt(<span class="number">10</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;number:&quot;</span> + number);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//需求：获取一个1-100之间的随机数</span></span><br><span class="line">        <span class="keyword">int</span> x = r.nextInt(<span class="number">100</span>) + <span class="number">1</span>;</span><br><span class="line">        System.out.println(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Random练习-猜数字（应用）"><a href="#Random练习-猜数字（应用）" class="headerlink" title="Random练习-猜数字（应用）"></a>Random练习-猜数字（应用）</h3><ul><li><p>需求：</p><p>程序自动生成一个1-100之间的数字，使用程序实现猜出这个数字是多少？</p><p>当猜错的时候根据不同情况给出相应的提示</p><p>A. 如果猜的数字比真实数字大，提示你猜的数据大了</p><p>B. 如果猜的数字比真实数字小，提示你猜的数据小了</p><p>C. 如果猜的数字与真实数字相等，提示恭喜你猜中了</p></li><li><p>示例代码：</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RandomTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//要完成猜数字的游戏，首先需要有一个要猜的数字，使用随机数生成该数字，范围1到100</span></span><br><span class="line">        Random r = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">int</span> number = r.nextInt(<span class="number">100</span>) + <span class="number">1</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="comment">//使用程序实现猜数字，每次均要输入猜测的数字值，需要使用键盘录入实现</span></span><br><span class="line">            Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">            </span><br><span class="line">            System.out.println(<span class="string">&quot;请输入你要猜的数字：&quot;</span>);</span><br><span class="line">            <span class="keyword">int</span> guessNumber = sc.nextInt();</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//比较输入的数字和系统产生的数据，需要使用分支语句。</span></span><br><span class="line">             <span class="comment">//这里使用if..else..if..格式，根据不同情况进行猜测结果显示</span></span><br><span class="line">            <span class="keyword">if</span>(guessNumber &gt; number) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;你猜的数字&quot;</span> + guessNumber + <span class="string">&quot;大了&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(guessNumber &lt; number) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;你猜的数字&quot;</span> + guessNumber + <span class="string">&quot;小了&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;恭喜你猜中了&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> switch </tag>
            
            <tag> for </tag>
            
            <tag> while </tag>
            
            <tag> Random </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础语法-2</title>
      <link href="/posts/bb48a15a.html"/>
      <url>/posts/bb48a15a.html</url>
      
        <content type="html"><![CDATA[<h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="算术运算符（理解）"><a href="#算术运算符（理解）" class="headerlink" title="算术运算符（理解）"></a>算术运算符（理解）</h3><h4 id="运算符和表达式"><a href="#运算符和表达式" class="headerlink" title="运算符和表达式"></a>运算符和表达式</h4><p>运算符：对常量或者变量进行操作的符号</p><p>表达式：用运算符把常量或者变量连接起来符合java语法的式子就可以称为表达式。</p><p>​                    不同运算符连接的表达式体现的是不同类型的表达式。</p><p>举例说明：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">int</span> c = a + b;</span><br></pre></td></tr></table></figure><p>  +：是运算符，并且是算术运算符。</p><p>  a + b：是表达式，由于+是算术运算符，所以这个表达式叫算术表达式。</p><h4 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h4><table><thead><tr><th>符号</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td>+</td><td>加</td><td>参看小学一年级</td></tr><tr><td>-</td><td>减</td><td>参看小学一年级</td></tr><tr><td>*</td><td>乘</td><td>参看小学二年级，与“×”相同</td></tr><tr><td>/</td><td>除</td><td>参看小学二年级，与“÷”相同</td></tr><tr><td>%</td><td>取余</td><td>获取的是两个数据做除法的余数</td></tr></tbody></table><p>注意：</p><p>/和%的区别：两个数据做除法，/取结果的商，%取结果的余数。</p><p>整数操作只能得到整数，要想得到小数，必须有浮点数参与运算。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">3</span>;</span><br><span class="line">System.out.println(a / b); <span class="comment">// 输出结果3</span></span><br><span class="line">System.out.println(a % b); <span class="comment">// 输出结果1</span></span><br></pre></td></tr></table></figure><h4 id="字符的“-”操作"><a href="#字符的“-”操作" class="headerlink" title="字符的“+”操作"></a>字符的“+”操作</h4><p>char类型参与算术运算，使用的是计算机底层对应的十进制数值。需要我们记住三个字符对应的数值：</p><p>‘a’  –  97        a-z是连续的，所以’b’对应的数值是98，’c’是99，依次递加</p><p>‘A’  –  65        A-Z是连续的，所以’B’对应的数值是66，’C’是67，依次递加</p><p>‘0’  –  48        0-9是连续的，所以’1’对应的数值是49，’2’是50，依次递加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 可以通过使用字符与整数做算术运算，得出字符对应的数值是多少</span></span><br><span class="line"><span class="keyword">char</span> ch1 = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">System.out.println(ch1 + <span class="number">1</span>); <span class="comment">// 输出98，97 + 1 = 98</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> ch2 = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">System.out.println(ch2 + <span class="number">1</span>); <span class="comment">// 输出66，65 + 1 = 66</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> ch3 = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">System.out.println(ch3 + <span class="number">1</span>); <span class="comment">// 输出49，48 + 1 = 49</span></span><br></pre></td></tr></table></figure><p>算术表达式中包含不同的基本数据类型的值的时候，整个算术表达式的类型会自动进行提升。</p><p>提升规则：</p><p>byte类型，short类型和char类型将被提升到int类型，不管是否有其他类型参与运算。</p><p>整个表达式的类型自动提升到与表达式中最高等级的操作数相同的类型</p><p>​       等级顺序：byte,short,char –&gt; int –&gt; long –&gt; float –&gt; double</p><p>例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">byte</span> b1 = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">byte</span> b2 = <span class="number">20</span>;</span><br><span class="line"><span class="comment">// byte b3 = b1 + b2; // 该行报错，因为byte类型参与算术运算会自动提示为int，int赋值给byte可能损失精度</span></span><br><span class="line"><span class="keyword">int</span> i3 = b1 + b2; <span class="comment">// 应该使用int接收</span></span><br><span class="line"><span class="keyword">byte</span> b3 = (<span class="keyword">byte</span>) (b1 + b2); <span class="comment">// 或者将结果强制转换为byte类型</span></span><br><span class="line">-------------------------------</span><br><span class="line"><span class="keyword">int</span> num1 = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">double</span> num2 = <span class="number">20.0</span>;</span><br><span class="line"><span class="keyword">double</span> num3 = num1 + num2; <span class="comment">// 使用double接收，因为num1会自动提升为double类型</span></span><br></pre></td></tr></table></figure><p>tips：正是由于上述原因，所以在程序开发中我们很少使用byte或者short类型定义整数。也很少会使用char类型定义字符，而使用字符串类型，更不会使用char类型做算术运算。</p><h4 id="字符串的“-”操作"><a href="#字符串的“-”操作" class="headerlink" title="字符串的“+”操作"></a>字符串的“+”操作</h4><p>当“+”操作中出现字符串时，这个”+”是字符串连接符，而不是算术运算。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;heixiong&quot;</span>+ <span class="number">666</span>); <span class="comment">// 输出：heixiong666</span></span><br></pre></td></tr></table></figure><p>在”+”操作中，如果出现了字符串，就是连接运算符，否则就是算术运算。当连续进行“+”操作时，从左到右逐个执行。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="number">1</span> + <span class="number">99</span> + <span class="string">&quot;年黑熊&quot;</span>); <span class="comment">// 输出：100年黑熊</span></span><br><span class="line">System.out.println(<span class="number">1</span> + <span class="number">2</span> + <span class="string">&quot;heixiong&quot;</span> + <span class="number">3</span> + <span class="number">4</span>); <span class="comment">// 输出：heixiong</span></span><br><span class="line"><span class="comment">// 可以使用小括号改变运算的优先级 </span></span><br><span class="line">System.out.println(<span class="number">1</span> + <span class="number">2</span> + <span class="string">&quot;heixiong&quot;</span> + (<span class="number">3</span> + <span class="number">4</span>)); <span class="comment">// 输出：3heixiong7</span></span><br></pre></td></tr></table></figure><h3 id="赋值运算符（应用）"><a href="#赋值运算符（应用）" class="headerlink" title="赋值运算符（应用）"></a>赋值运算符（应用）</h3><p>赋值运算符的作用是将一个表达式的值赋给左边，左边必须是可修改的，不能是常量。</p><table><thead><tr><th>符号</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td>=</td><td>赋值</td><td>a=10，将10赋值给变量a</td></tr><tr><td>+=</td><td>加后赋值</td><td>a+=b，将a+b的值给a</td></tr><tr><td>-=</td><td>减后赋值</td><td>a-=b，将a-b的值给a</td></tr><tr><td>*=</td><td>乘后赋值</td><td>a*=b，将a×b的值给a</td></tr><tr><td>/=</td><td>除后赋值</td><td>a/=b，将a÷b的商给a</td></tr><tr><td>%=</td><td>取余后赋值</td><td>a%=b，将a÷b的余数给a</td></tr></tbody></table><p>注意：</p><p>扩展的赋值运算符隐含了强制类型转换。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">short</span> s = <span class="number">10</span>;</span><br><span class="line">s = s + <span class="number">10</span>; <span class="comment">// 此行代码报出，因为运算中s提升为int类型，运算结果int赋值给short可能损失精度</span></span><br><span class="line"></span><br><span class="line">s += <span class="number">10</span>; <span class="comment">// 此行代码没有问题，隐含了强制类型转换，相当于 s = (short) (s + 10);</span></span><br></pre></td></tr></table></figure><h3 id="自增自减运算符（理解）"><a href="#自增自减运算符（理解）" class="headerlink" title="自增自减运算符（理解）"></a>自增自减运算符（理解）</h3><table><thead><tr><th>符号</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td>++</td><td>自增</td><td>变量的值加1</td></tr><tr><td>–</td><td>自减</td><td>变量的值减1</td></tr></tbody></table><p>注意事项：</p><p>​    ++和– 既可以放在变量的后边，也可以放在变量的前边。</p><p>​    单独使用的时候， ++和– 无论是放在变量的前边还是后边，结果是一样的。</p><p>​    参与操作的时候，如果放在变量的后边，先拿变量参与操作，后拿变量做++或者–。</p><p>​    参与操作的时候，如果放在变量的前边，先拿变量做++或者–，后拿变量参与操作。</p><p>​    最常见的用法：单独使用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">10</span>;</span><br><span class="line">i++; <span class="comment">// 单独使用</span></span><br><span class="line">System.out.println(<span class="string">&quot;i:&quot;</span> + i); <span class="comment">// i:11</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> j = <span class="number">10</span>;</span><br><span class="line">++j; <span class="comment">// 单独使用</span></span><br><span class="line">System.out.println(<span class="string">&quot;j:&quot;</span> + j); <span class="comment">// j:11</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> x = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> y = x++; <span class="comment">// 赋值运算，++在后边，所以是使用x原来的值赋值给y，x本身自增1</span></span><br><span class="line">System.out.println(<span class="string">&quot;x:&quot;</span> + x + <span class="string">&quot;, y:&quot;</span> + y); <span class="comment">// x:11，y:10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> m = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n = ++m; <span class="comment">// 赋值运算，++在前边，所以是使用m自增后的值赋值给n，m本身自增1</span></span><br><span class="line">System.out.println(<span class="string">&quot;m:&quot;</span> + m + <span class="string">&quot;, m:&quot;</span> + m); <span class="comment">// m:11，m:11</span></span><br></pre></td></tr></table></figure><p>练习：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> y = x++ + x++ + x++;</span><br><span class="line">System.out.println(y); <span class="comment">// y的值是多少？</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">解析，三个表达式都是++在后，所以每次使用的都是自增前的值，但程序自左至右执行，所以第一次自增时，使用的是10进行计算，但第二次自增时，x的值已经自增到11了，所以第二次使用的是11，然后再次自增。。。</span></span><br><span class="line"><span class="comment">所以整个式子应该是：int y = 10 + 11 + 12;</span></span><br><span class="line"><span class="comment">输出结果为33。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">注意：通过此练习深刻理解自增和自减的规律，但实际开发中强烈建议不要写这样的代码！小心挨打！</span><br></pre></td></tr></table></figure><h3 id="关系运算符（应用）"><a href="#关系运算符（应用）" class="headerlink" title="关系运算符（应用）"></a>关系运算符（应用）</h3><p>关系运算符有6种关系，分别为小于、小于等于、大于、等于、大于等于、不等于。</p><table><thead><tr><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>==</td><td>a==b，判断a和b的值是否相等，成立为true，不成立为false</td></tr><tr><td>!=</td><td>a!=b，判断a和b的值是否不相等，成立为true，不成立为false</td></tr><tr><td>&gt;</td><td>a&gt;b，判断a是否大于b，成立为true，不成立为false</td></tr><tr><td>&gt;=</td><td>a&gt;=b，判断a是否大于等于b，成立为true，不成立为false</td></tr><tr><td>&lt;</td><td>a&lt;b，判断a是否小于b，成立为true，不成立为false</td></tr><tr><td>&lt;=</td><td>a&lt;=b，判断a是否小于等于b，成立为true，不成立为false</td></tr></tbody></table><p>注意事项：</p><p>​    关系运算符的结果都是boolean类型，要么是true，要么是false。</p><p>​    千万不要把“==”误写成“=”，”==”是判断是否相等的关系，”=”是赋值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">System.out.println(a == b); <span class="comment">// false</span></span><br><span class="line">System.out.println(a != b); <span class="comment">// true</span></span><br><span class="line">System.out.println(a &gt; b); <span class="comment">// false</span></span><br><span class="line">System.out.println(a &gt;= b); <span class="comment">// false</span></span><br><span class="line">System.out.println(a &lt; b); <span class="comment">// true</span></span><br><span class="line">System.out.println(a &lt;= b); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 关系运算的结果肯定是boolean类型，所以也可以将运算结果赋值给boolean类型的变量</span></span><br><span class="line"><span class="keyword">boolean</span> flag = a &gt; b;</span><br><span class="line">System.out.println(flag); <span class="comment">// 输出false</span></span><br></pre></td></tr></table></figure><h3 id="逻辑运算符（应用）"><a href="#逻辑运算符（应用）" class="headerlink" title="逻辑运算符（应用）"></a>逻辑运算符（应用）</h3><p>逻辑运算符把各个运算的关系表达式连接起来组成一个复杂的逻辑表达式，以判断程序中的表达式是否成立，判断的结果是 true 或 false。</p><table><thead><tr><th>符号</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td>&amp;</td><td>逻辑与</td><td>a&amp;b，a和b都是true，结果为true，否则为false</td></tr><tr><td>|</td><td>逻辑或</td><td>a|b，a和b都是false，结果为false，否则为true</td></tr><tr><td>^</td><td>逻辑异或</td><td>a^b，a和b结果不同为true，相同为false</td></tr><tr><td>!</td><td>逻辑非</td><td>!a，结果和a的结果正好相反</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义变量</span></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">int</span> k = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//&amp; “与”，并且的关系，只要表达式中有一个值为false，结果即为false</span></span><br><span class="line">System.out.println((i &gt; j) &amp; (i &gt; k)); <span class="comment">//false &amp; false,输出false</span></span><br><span class="line">System.out.println((i &lt; j) &amp; (i &gt; k)); <span class="comment">//true &amp; false,输出false</span></span><br><span class="line">System.out.println((i &gt; j) &amp; (i &lt; k)); <span class="comment">//false &amp; true,输出false</span></span><br><span class="line">System.out.println((i &lt; j) &amp; (i &lt; k)); <span class="comment">//true &amp; true,输出true</span></span><br><span class="line">System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//| “或”，或者的关系，只要表达式中有一个值为true，结果即为true</span></span><br><span class="line">System.out.println((i &gt; j) | (i &gt; k)); <span class="comment">//false | false,输出false</span></span><br><span class="line">System.out.println((i &lt; j) | (i &gt; k)); <span class="comment">//true | false,输出true</span></span><br><span class="line">System.out.println((i &gt; j) | (i &lt; k)); <span class="comment">//false | true,输出true</span></span><br><span class="line">System.out.println((i &lt; j) | (i &lt; k)); <span class="comment">//true | true,输出true</span></span><br><span class="line">System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//^ “异或”，相同为false，不同为true</span></span><br><span class="line">System.out.println((i &gt; j) ^ (i &gt; k)); <span class="comment">//false ^ false,输出false</span></span><br><span class="line">System.out.println((i &lt; j) ^ (i &gt; k)); <span class="comment">//true ^ false,输出true</span></span><br><span class="line">System.out.println((i &gt; j) ^ (i &lt; k)); <span class="comment">//false ^ true,输出true</span></span><br><span class="line">System.out.println((i &lt; j) ^ (i &lt; k)); <span class="comment">//true ^ true,输出false</span></span><br><span class="line">System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//! “非”，取反</span></span><br><span class="line">System.out.println((i &gt; j)); <span class="comment">//false</span></span><br><span class="line">System.out.println(!(i &gt; j)); <span class="comment">//!false，,输出true</span></span><br></pre></td></tr></table></figure><h4 id="短路逻辑运算符"><a href="#短路逻辑运算符" class="headerlink" title="短路逻辑运算符"></a>短路逻辑运算符</h4><table><thead><tr><th>符号</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td>短路与</td><td>作用和&amp;相同，但是有短路效果</td></tr><tr><td>||</td><td>短路或</td><td>作用和|相同，但是有短路效果</td></tr></tbody></table><p>在逻辑与运算中，只要有一个表达式的值为false，那么结果就可以判定为false了，没有必要将所有表达式的值都计算出来，短路与操作就有这样的效果，可以提高效率。同理在逻辑或运算中，一旦发现值为true，右边的表达式将不再参与运算。</p><ul><li><p>逻辑与&amp;，无论左边真假，右边都要执行。</p></li><li><p>短路与&amp;&amp;，如果左边为真，右边执行；如果左边为假，右边不执行。</p></li><li><p>逻辑或|，无论左边真假，右边都要执行。</p></li><li><p>短路或||，如果左边为假，右边执行；如果左边为真，右边不执行。</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> y = <span class="number">4</span>;</span><br><span class="line">System.out.println((x++ &gt; <span class="number">4</span>) &amp; (y++ &gt; <span class="number">5</span>)); <span class="comment">// 两个表达都会运算</span></span><br><span class="line">System.out.println(x); <span class="comment">// 4</span></span><br><span class="line">System.out.println(y); <span class="comment">// 5</span></span><br><span class="line"></span><br><span class="line">System.out.println((x++ &gt; <span class="number">4</span>) &amp;&amp; (y++ &gt; <span class="number">5</span>)); <span class="comment">// 左边已经可以确定结果为false，右边不参与运算</span></span><br><span class="line">System.out.println(x); <span class="comment">// 4</span></span><br><span class="line">System.out.println(y); <span class="comment">// 4</span></span><br></pre></td></tr></table></figure><h3 id="三元运算符（理解）"><a href="#三元运算符（理解）" class="headerlink" title="三元运算符（理解）"></a>三元运算符（理解）</h3><p>三元运算符语法格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">关系表达式 ? 表达式<span class="number">1</span> : 表达式<span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>解释：问号前面的位置是判断的条件，判断结果为boolean型，为true时调用表达式1，为false时调用表达式2。其逻辑为：如果条件表达式成立或者满足则执行表达式1，否则执行第二个。</p><p>举例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">int</span> c = a &gt; b ? a : b; <span class="comment">// 判断 a&gt;b 是否为真，如果为真取a的值，如果为假，取b的值</span></span><br></pre></td></tr></table></figure><p>三元运算符案例：</p><p>1、需求：动物园里有两只老虎，已知两只老虎的体重分别为180kg、200kg，请用程序实现判断两只老虎的体重是否相同。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OperatorTest01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1：定义两个变量用于保存老虎的体重，单位为kg，这里仅仅体现数值即可。</span></span><br><span class="line">        <span class="keyword">int</span> weight1 = <span class="number">180</span>;</span><br><span class="line">        <span class="keyword">int</span> weight2 = <span class="number">200</span>;    </span><br><span class="line">        <span class="comment">//2：用三元运算符实现老虎体重的判断，体重相同，返回true，否则，返回false。</span></span><br><span class="line">        <span class="keyword">boolean</span> b = weight1 == weight2 ? <span class="keyword">true</span> : <span class="keyword">false</span>;    </span><br><span class="line">        <span class="comment">//3：输出结果</span></span><br><span class="line">        System.out.println(<span class="string">&quot;b:&quot;</span> + b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、需求：一座寺庙里住着三个和尚，已知他们的身高分别为150cm、210cm、165cm，请用程序实现获取这三个和尚的最高身高。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OperatorTest02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1：定义三个变量用于保存和尚的身高，单位为cm，这里仅仅体现数值即可。</span></span><br><span class="line">        <span class="keyword">int</span> height1 = <span class="number">150</span>;</span><br><span class="line">        <span class="keyword">int</span> height2 = <span class="number">210</span>;</span><br><span class="line">        <span class="keyword">int</span> height3 = <span class="number">165</span>;    </span><br><span class="line">        <span class="comment">//2：用三元运算符获取前两个和尚的较高身高值，并用临时身高变量保存起来。</span></span><br><span class="line">        <span class="keyword">int</span> tempHeight = height1 &gt; height2 ? height1 : height2;        </span><br><span class="line">        <span class="comment">//3：用三元运算符获取临时身高值和第三个和尚身高较高值，并用最大身高变量保存。</span></span><br><span class="line">        <span class="keyword">int</span> maxHeight = tempHeight &gt; height3 ? tempHeight : height3;    </span><br><span class="line">        <span class="comment">//4：输出结果</span></span><br><span class="line">        System.out.println(<span class="string">&quot;maxHeight:&quot;</span> + maxHeight);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数据输入（应用）"><a href="#数据输入（应用）" class="headerlink" title="数据输入（应用）"></a>数据输入（应用）</h2><p>我们可以通过 Scanner 类来获取用户的输入。使用步骤如下：</p><p>1、导包。Scanner 类在java.util包下，所以需要将该类导入。导包的语句需要定义在类的上面。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner; </span><br></pre></td></tr></table></figure><p>2、创建Scanner对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Scanner sc = <span class="keyword">new</span> Scanner(System.in);<span class="comment">// 创建Scanner对象，sc表示变量名，其他均不可变</span></span><br></pre></td></tr></table></figure><p>3、接收数据</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = sc.nextInt(); <span class="comment">// 表示将键盘录入的值作为int数返回。</span></span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScannerDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建对象</span></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="comment">//接收数据</span></span><br><span class="line">        <span class="keyword">int</span> x = sc.nextInt();</span><br><span class="line">        <span class="comment">//输出数据</span></span><br><span class="line">        System.out.println(<span class="string">&quot;x:&quot;</span> + x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改写三个和尚案例，数据使用键盘录入。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScannerTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//身高未知，采用键盘录入实现。首先导包，然后创建对象。</span></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="comment">//键盘录入三个身高分别赋值给三个变量。</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第一个和尚的身高：&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> height1 = sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第二个和尚的身高：&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> height2 = sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第三个和尚的身高：&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> height3 = sc.nextInt();</span><br><span class="line">        <span class="comment">//用三元运算符获取前两个和尚的较高身高值，并用临时身高变量保存起来。</span></span><br><span class="line">        <span class="keyword">int</span> tempHeight = height1 &gt; height2 ? height1 : height2;</span><br><span class="line">        <span class="comment">//用三元运算符获取临时身高值和第三个和尚身高较高值，并用最大身高变量保存。</span></span><br><span class="line">        <span class="keyword">int</span> maxHeight = tempHeight &gt; height3 ? tempHeight : height3;</span><br><span class="line">        <span class="comment">//输出结果。</span></span><br><span class="line">        System.out.println(<span class="string">&quot;这三个和尚中身高最高的是：&quot;</span> + maxHeight +<span class="string">&quot;cm&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="流程控制语句（应用）"><a href="#流程控制语句（应用）" class="headerlink" title="流程控制语句（应用）"></a>流程控制语句（应用）</h2><p>在一个程序执行的过程中，各条语句的执行顺序对程序的结果是有直接影响的。所以，我们必须清楚每条语句的执行流程。而且，很多时候要通过控制语句的执行顺序来实现我们想要的功能。</p><h3 id="流程控制语句分类"><a href="#流程控制语句分类" class="headerlink" title="流程控制语句分类"></a>流程控制语句分类</h3><p>​    顺序结构</p><p>​    分支结构(if, switch)</p><p>​    循环结构(for, while, do…while)</p><h3 id="顺序结构"><a href="#顺序结构" class="headerlink" title="顺序结构"></a>顺序结构</h3><p>顺序结构是程序中最简单最基本的流程控制，没有特定的语法结构，按照代码的先后顺序，依次执行，程序中大多数的代码都是这样执行的。</p><p>顺序结构执行流程图：</p><p><img src="https://cdn.jsdelivr.net/gh/heixiongwl/heixiong/1545615769372.png" alt="1545615769372"></p><h3 id="分支结构之if语句"><a href="#分支结构之if语句" class="headerlink" title="分支结构之if语句"></a>分支结构之if语句</h3><h4 id="if语句格式1"><a href="#if语句格式1" class="headerlink" title="if语句格式1"></a>if语句格式1</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line"><span class="keyword">if</span> (关系表达式) &#123;</span><br><span class="line">    语句体;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行流程：</p><p>①首先计算关系表达式的值</p><p>②如果关系表达式的值为true就执行语句体</p><p>③如果关系表达式的值为false就不执行语句体</p><p>④继续执行后面的语句内容</p><p><img src="https://cdn.jsdelivr.net/gh/heixiongwl/heixiong/1545616039363.png" alt="1545616039363"></p><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IfDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;开始&quot;</span>);    </span><br><span class="line">        <span class="comment">//定义两个变量</span></span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">20</span>;    </span><br><span class="line">        <span class="comment">//需求：判断a和b的值是否相等，如果相等，就在控制台输出：a等于b</span></span><br><span class="line">        <span class="keyword">if</span>(a == b) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;a等于b&quot;</span>);</span><br><span class="line">        &#125;        </span><br><span class="line">        <span class="comment">//需求：判断a和c的值是否相等，如果相等，就在控制台输出：a等于c</span></span><br><span class="line">        <span class="keyword">int</span> c = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span>(a == c) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;a等于c&quot;</span>);</span><br><span class="line">        &#125;        </span><br><span class="line">        System.out.println(<span class="string">&quot;结束&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="if语句格式2"><a href="#if语句格式2" class="headerlink" title="if语句格式2"></a>if语句格式2</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line"><span class="keyword">if</span> (关系表达式) &#123;</span><br><span class="line">    语句体<span class="number">1</span>;    </span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    语句体<span class="number">2</span>;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行流程：</p><p>①首先计算关系表达式的值</p><p>②如果关系表达式的值为true就执行语句体1</p><p>③如果关系表达式的值为false就执行语句体2</p><p>④继续执行后面的语句内容</p><p><img src="https://cdn.jsdelivr.net/gh/heixiongwl/heixiong/1545616221283.png" alt="1545616221283"></p><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IfDemo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;开始&quot;</span>);        </span><br><span class="line">        <span class="comment">//定义两个变量</span></span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">        b = <span class="number">5</span>;    </span><br><span class="line">        <span class="comment">//需求：判断a是否大于b，如果是，在控制台输出：a的值大于b，否则，在控制台输出：a的值不大于b</span></span><br><span class="line">        <span class="keyword">if</span>(a &gt; b) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;a的值大于b&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;a的值不大于b&quot;</span>);</span><br><span class="line">        &#125;        </span><br><span class="line">        System.out.println(<span class="string">&quot;结束&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>if语句案例：奇偶数</p><p>需求：任意给出一个整数，请用程序实现判断该整数是奇数还是偶数，并在控制台输出该整数是奇数还是偶数。</p><p>分析：</p><p>​    ①为了体现任意给出一个整数，采用键盘录入一个数据</p><p>​    ②判断整数是偶数还是奇数要分两种情况进行判断，使用if..else结构</p><p>​    ③判断是否偶数需要使用取余运算符实现该功能 number % 2 == 0</p><p>​    ④根据判定情况，在控制台输出对应的内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IfTest01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//为了体现任意给出一个整数，采用键盘录入一个数据。(导包，创建对象，接收数据)</span></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);        </span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个整数：&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> number = sc.nextInt();    </span><br><span class="line">        <span class="comment">//判断整数是偶数还是奇数要分两种情况进行判断，使用if..else结构        </span></span><br><span class="line">        <span class="comment">//判断是否偶数需要使用取余运算符实现该功能 number % 2 == 0</span></span><br><span class="line">        <span class="comment">//根据判定情况，在控制台输出对应的内容</span></span><br><span class="line">        <span class="keyword">if</span>(number%<span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(number + <span class="string">&quot;是偶数&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(number + <span class="string">&quot;是奇数&quot;</span>);</span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="if语句格式3"><a href="#if语句格式3" class="headerlink" title="if语句格式3"></a>if语句格式3</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">格式：</span><br><span class="line"><span class="keyword">if</span> (关系表达式<span class="number">1</span>) &#123;</span><br><span class="line">    语句体<span class="number">1</span>;    </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (关系表达式<span class="number">2</span>) &#123;</span><br><span class="line">    语句体<span class="number">2</span>;    </span><br><span class="line">&#125; </span><br><span class="line">…</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    语句体n+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行流程：</p><p>①首先计算关系表达式1的值</p><p>②如果值为true就执行语句体1；如果值为false就计算关系表达式2的值</p><p>③如果值为true就执行语句体2；如果值为false就计算关系表达式3的值</p><p>④…</p><p>⑤如果没有任何关系表达式为true，就执行语句体n+1。</p><p><img src="https://cdn.jsdelivr.net/gh/heixiongwl/heixiong/1545616667104.png" alt="1545616667104"></p><p>示例：键盘录入一个星期数(1,2,…7)，输出对应的星期一，星期二，…星期日</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IfDemo03</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;开始&quot;</span>);</span><br><span class="line">        <span class="comment">// 需求：键盘录入一个星期数(1,2,...7)，输出对应的星期一，星期二，...星期日</span></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个星期数(1-7)：&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> week = sc.nextInt();</span><br><span class="line">        <span class="keyword">if</span>(week == <span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;星期一&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(week == <span class="number">2</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;星期二&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(week == <span class="number">3</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;星期三&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(week == <span class="number">4</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;星期四&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(week == <span class="number">5</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;星期五&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(week == <span class="number">6</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;星期六&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;星期日&quot;</span>);</span><br><span class="line">        &#125;    </span><br><span class="line">        System.out.println(<span class="string">&quot;结束&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>if语句格式3案例：</p><p>需求：小明快要期末考试了，小明爸爸对他说，会根据他不同的考试成绩，送他不同的礼物，假如你可以控制小明的得分，请用程序实现小明到底该获得什么样的礼物，并在控制台输出。</p><p>分析：</p><p>​    ①小明的考试成绩未知，可以使用键盘录入的方式获取值</p><p>​    ②由于奖励种类较多，属于多种判断，采用if…else…if格式实现</p><p>​    ③为每种判断设置对应的条件</p><p>​    ④为每种判断设置对应的奖励</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IfTest02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//小明的考试成绩未知，可以使用键盘录入的方式获取值</span></span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);    </span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个分数：&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> score = sc.nextInt();</span><br><span class="line">        <span class="comment">//由于奖励种类较多，属于多种判断，采用if...else...if格式实现</span></span><br><span class="line">        <span class="comment">//为每种判断设置对应的条件</span></span><br><span class="line">        <span class="comment">//为每种判断设置对应的奖励    </span></span><br><span class="line">        <span class="comment">//数据测试：正确数据，边界数据，错误数据</span></span><br><span class="line">        <span class="keyword">if</span>(score&gt;<span class="number">100</span> || score&lt;<span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;你输入的分数有误&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(score&gt;=<span class="number">95</span> &amp;&amp; score&lt;=<span class="number">100</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;山地自行车一辆&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(score&gt;=<span class="number">90</span> &amp;&amp; score&lt;=<span class="number">94</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;游乐场玩一次&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(score&gt;=<span class="number">80</span> &amp;&amp; score&lt;=<span class="number">89</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;变形金刚玩具一个&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;胖揍一顿&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java基础语法 </tag>
            
            <tag> 运算符 </tag>
            
            <tag> 数据输入 </tag>
            
            <tag> 流程控制语句 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础语法-1</title>
      <link href="/posts/2241f0e0.html"/>
      <url>/posts/2241f0e0.html</url>
      
        <content type="html"><![CDATA[<h3 id="注释（理解）"><a href="#注释（理解）" class="headerlink" title="注释（理解）"></a>注释（理解）</h3><p>注释是对代码的解释和说明文字，可以提高程序的可读性，因此在程序中添加必要的注释文字十分重要。Java中的注释分为三种：</p><p>单行注释。单行注释的格式是使用//，从//开始至本行结尾的文字将作为注释文字。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这是单行注释文字</span></span><br></pre></td></tr></table></figure><p>多行注释。多行注释的格式是使用/* 和 */将一段较长的注释括起来。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这是多行注释文字</span></span><br><span class="line"><span class="comment">这是多行注释文字</span></span><br><span class="line"><span class="comment">这是多行注释文字</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">注意：多行注释不能嵌套使用。</span><br></pre></td></tr></table></figure><p>文档注释。文档注释以<code>/**</code>开始，以<code>*/</code>结束。（以后讲）</p><h3 id="关键字（理解）"><a href="#关键字（理解）" class="headerlink" title="关键字（理解）"></a>关键字（理解）</h3><p>关键字是指被java语言赋予了特殊含义的单词。</p><p>关键字的特点：</p><p>​    关键字的字母全部小写。</p><p>​    常用的代码编辑器对关键字都有高亮显示，比如现在我们能看到的public、class、static等。</p><h3 id="常量（应用）"><a href="#常量（应用）" class="headerlink" title="常量（应用）"></a>常量（应用）</h3><p>常量：在程序运行过程中，其值不可以发生改变的量。</p><p>Java中的常量分类：</p><p>​    字符串常量  用双引号括起来的多个字符（可以包含0个、一个或多个），例如”a”、”abc”、”中国”等</p><p>​    整数常量  整数，例如：-10、0、88等</p><p>​    小数常量  小数，例如：-5.5、1.0、88.88等</p><p>​    字符常量  用单引号括起来的一个字符，例如：’a’、’5’、’B’、’中’等</p><p>​    布尔常量  布尔值，表示真假，只有两个值true和false</p><p>​    空常量  一个特殊的值，空值，值为null</p><p>除空常量外，其他常量均可使用输出语句直接输出。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="number">10</span>); <span class="comment">// 输出一个整数</span></span><br><span class="line">        System.out.println(<span class="number">5.5</span>); <span class="comment">// 输出一个小数</span></span><br><span class="line">        System.out.println(<span class="string">&#x27;a&#x27;</span>); <span class="comment">// 输出一个字符</span></span><br><span class="line">        System.out.println(<span class="keyword">true</span>); <span class="comment">// 输出boolean值true</span></span><br><span class="line">        System.out.println(<span class="string">&quot;黑熊网络 heixiongwl.com&quot;</span>); <span class="comment">// 输出字符串</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数据类型（记忆、应用）"><a href="#数据类型（记忆、应用）" class="headerlink" title="数据类型（记忆、应用）"></a>数据类型（记忆、应用）</h3><h4 id="计算机存储单元"><a href="#计算机存储单元" class="headerlink" title="计算机存储单元"></a>计算机存储单元</h4><p>我们知道计算机是可以用来存储数据的，但是无论是内存还是硬盘，计算机存储设备的最小信息单元叫“位（bit）”，我们又称之为“比特位”，通常用小写的字母”b”表示。而计算机中最基本的存储单元叫“字节（byte）”，</p><p>通常用大写字母”B”表示，字节是由连续的8个位组成。</p><p>除了字节外还有一些常用的存储单位，其换算单位如下：</p><p>1B（字节） = 8bit</p><p>1KB = 1024B</p><p>1MB = 1024KB</p><p>1GB = 1024MB</p><p>1TB = 1024GB</p><h4 id="Java中的数据类型"><a href="#Java中的数据类型" class="headerlink" title="Java中的数据类型"></a>Java中的数据类型</h4><p>Java是一个强类型语言，Java中的数据必须明确数据类型。在Java中的数据类型包括基本数据类型和引用数据类型两种。</p><p>Java中的基本数据类型：</p><table><thead><tr><th align="left">数据类型</th><th>关键字</th><th>内存占用</th><th align="left">取值范围</th></tr></thead><tbody><tr><td align="left">整数类型</td><td>byte</td><td>1</td><td align="left">-128~127</td></tr><tr><td align="left"></td><td>short</td><td>2</td><td align="left">-32768~32767</td></tr><tr><td align="left"></td><td>int(默认)</td><td>4</td><td align="left">-2的31次方到2的31次方-1</td></tr><tr><td align="left"></td><td>long</td><td>8</td><td align="left">-2的63次方到2的63次方-1</td></tr><tr><td align="left">浮点类型</td><td>float</td><td>4</td><td align="left">负数：-3.402823E+38到-1.401298E-45                                                             正数：   1.401298E-45到3.402823E+38</td></tr><tr><td align="left"></td><td>double(默认)</td><td>8</td><td align="left">负数：-1.797693E+308到-4.9000000E-324                                              正数：4.9000000E-324   到1.797693E+308</td></tr><tr><td align="left">字符类型</td><td>char</td><td>2</td><td align="left">0-65535</td></tr><tr><td align="left">布尔类型</td><td>boolean</td><td>1</td><td align="left">true，false</td></tr></tbody></table><p>说明：</p><p>​    e+38表示是乘以10的38次方，同样，e-45表示乘以10的负45次方。</p><p>​    在java中整数默认是int类型，浮点数默认是double类型。</p><h3 id="变量（应用）"><a href="#变量（应用）" class="headerlink" title="变量（应用）"></a>变量（应用）</h3><h4 id="变量的定义"><a href="#变量的定义" class="headerlink" title="变量的定义"></a>变量的定义</h4><p>变量：在程序运行过程中，其值可以发生改变的量。</p><p>从本质上讲，变量是内存中的一小块区域，其值可以在一定范围内变化。</p><p>变量的定义格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">数据类型 变量名 = 初始化值; <span class="comment">// 声明变量并赋值</span></span><br><span class="line"><span class="keyword">int</span> age = <span class="number">18</span>;</span><br><span class="line">System.out.println(age);</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 先声明，后赋值（使用前赋值即可）</span></span><br><span class="line">数据类型 变量名;</span><br><span class="line">变量名 = 初始化值;</span><br><span class="line"><span class="keyword">double</span> money;</span><br><span class="line">money = <span class="number">55.5</span>;</span><br><span class="line">System.out.println(money);</span><br></pre></td></tr></table></figure><p>还可以在同一行定义多个同一种数据类型的变量，中间使用逗号隔开。但不建议使用这种方式，降低程序的可读性。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>, b = <span class="number">20</span>; <span class="comment">// 定义int类型的变量a和b，中间使用逗号隔开</span></span><br><span class="line">System.out.println(a);</span><br><span class="line">System.out.println(b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> c,d; <span class="comment">// 声明int类型的变量c和d，中间使用逗号隔开</span></span><br><span class="line">c = <span class="number">30</span>;</span><br><span class="line">d = <span class="number">40</span>;</span><br><span class="line">System.out.println(c);</span><br><span class="line">System.out.println(d);</span><br></pre></td></tr></table></figure><p>变量的使用：通过变量名访问即可。</p><h4 id="使用变量时的注意事项"><a href="#使用变量时的注意事项" class="headerlink" title="使用变量时的注意事项"></a>使用变量时的注意事项</h4><ol><li>在同一对花括号中，变量名不能重复。</li><li>变量在使用之前，必须初始化（赋值）。</li><li>定义long类型的变量时，需要在整数的后面加L（大小写均可，建议大写）。因为整数默认是int类型，整数太大可能超出int范围。</li><li>定义float类型的变量时，需要在小数的后面加F（大小写均可，建议大写）。因为浮点数的默认类型是double， double的取值范围是大于float的，类型不兼容。</li></ol><h3 id="标识符（记忆、理解）"><a href="#标识符（记忆、理解）" class="headerlink" title="标识符（记忆、理解）"></a>标识符（记忆、理解）</h3><p>标识符是用户编程时使用的名字，用于给类、方法、变量、常量等命名。</p><p>Java中标识符的组成规则：</p><p>​    由字母、数字、下划线“_”、美元符号“$”组成，第一个字符不能是数字。</p><p>​    不能使用java中的关键字作为标识符。    </p><p>​    标识符对大小写敏感（区分大小写）。</p><p>Java中标识符的命名约定：</p><p>​    小驼峰式命名：变量名、方法名</p><p>​        首字母小写，从第二个单词开始每个单词的首字母大写。</p><p>​    大驼峰式命名：类名</p><p>​        每个单词的首字母都大写。</p><p>​    另外，标识符的命名最好可以做到见名知意</p><p>​        例如：username、studentNumber等。</p><h3 id="类型转换（理解）"><a href="#类型转换（理解）" class="headerlink" title="类型转换（理解）"></a>类型转换（理解）</h3><p>在Java中，一些数据类型之间是可以相互转换的。分为两种情况：自动类型转换和强制类型转换。</p><p>自动类型转换：</p><p>​    把一个表示数据范围小的数值或者变量赋值给另一个表示数据范围大的变量。这种转换方式是自动的，直接书写即可。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> num = <span class="number">10</span>; <span class="comment">// 将int类型的10直接赋值给double类型</span></span><br><span class="line">System.out.println(num); <span class="comment">// 输出10.0</span></span><br></pre></td></tr></table></figure><p>强制类型转换：</p><p>​    把一个表示数据范围大的数值或者变量赋值给另一个表示数据范围小的变量。</p><p>​    强制类型转换格式：目标数据类型 变量名 = (目标数据类型)值或者变量;</p><p>​    例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> num1 = <span class="number">5.5</span>;</span><br><span class="line"><span class="keyword">int</span> num2 = (<span class="keyword">int</span>) num1; <span class="comment">// 将double类型的num1强制转换为int类型</span></span><br><span class="line">System.out.println(num2); <span class="comment">// 输出5（小数位直接舍弃）</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/heixiongwl/heixiong/%E5%9B%BE%E7%89%871.png" alt="表示数据范围从小到大图"></p><p>说明：</p><ol><li>char类型的数据转换为int类型是按照码表中对应的int值进行计算的。比如在ASCII码表中，’a’对应97。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">System.out.println(a); <span class="comment">// 将输出97</span></span><br></pre></td></tr></table></figure><ol start="2"><li>整数默认是int类型，byte、short和char类型数据参与运算均会自动转换为int类型。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">byte</span> b1 = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">byte</span> b2 = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">byte</span> b3 = b1 + b2; </span><br><span class="line"><span class="comment">// 第三行代码会报错，b1和b2会自动转换为int类型，计算结果为int，int赋值给byte需要强制类型转换。</span></span><br><span class="line"><span class="comment">// 修改为:</span></span><br><span class="line"><span class="keyword">int</span> num = b1 + b2;</span><br><span class="line"><span class="comment">// 或者：</span></span><br><span class="line"><span class="keyword">byte</span> b3 = (<span class="keyword">byte</span>) (b1 + b2);</span><br></pre></td></tr></table></figure><ol><li>boolean类型不能与其他基本数据类型相互转换。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java基础语法 </tag>
            
            <tag> 注释 </tag>
            
            <tag> 关键字 </tag>
            
            <tag> 常量 </tag>
            
            <tag> 数据类型 </tag>
            
            <tag> 变量 </tag>
            
            <tag> 标识符 </tag>
            
            <tag> 类型转换 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
